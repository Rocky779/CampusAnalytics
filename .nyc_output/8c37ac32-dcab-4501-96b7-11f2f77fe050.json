{"/Users/rishishukla/Desktop/project_team067/src/controller/InsightFacade.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":25},"end":{"line":29,"column":52}},"28":{"start":{"line":30,"column":11},"end":{"line":30,"column":44}},"29":{"start":{"line":31,"column":20},"end":{"line":31,"column":57}},"30":{"start":{"line":32,"column":17},"end":{"line":32,"column":36}},"31":{"start":{"line":33,"column":29},"end":{"line":33,"column":60}},"32":{"start":{"line":34,"column":28},"end":{"line":34,"column":58}},"33":{"start":{"line":36,"column":17},"end":{"line":36,"column":19}},"34":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"35":{"start":{"line":42,"column":8},"end":{"line":42,"column":94}},"36":{"start":{"line":43,"column":8},"end":{"line":43,"column":87}},"37":{"start":{"line":44,"column":8},"end":{"line":44,"column":49}},"38":{"start":{"line":47,"column":31},"end":{"line":47,"column":37}},"39":{"start":{"line":48,"column":8},"end":{"line":58,"column":9}},"40":{"start":{"line":49,"column":26},"end":{"line":49,"column":58}},"41":{"start":{"line":50,"column":12},"end":{"line":55,"column":15}},"42":{"start":{"line":51,"column":27},"end":{"line":51,"column":52}},"43":{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},"44":{"start":{"line":53,"column":20},"end":{"line":53,"column":45}},"45":{"start":{"line":61,"column":8},"end":{"line":61,"column":36}},"46":{"start":{"line":62,"column":8},"end":{"line":75,"column":9}},"47":{"start":{"line":63,"column":12},"end":{"line":71,"column":13}},"48":{"start":{"line":64,"column":16},"end":{"line":64,"column":80}},"49":{"start":{"line":66,"column":17},"end":{"line":71,"column":13}},"50":{"start":{"line":67,"column":16},"end":{"line":67,"column":70}},"51":{"start":{"line":70,"column":16},"end":{"line":70,"column":98}},"52":{"start":{"line":74,"column":12},"end":{"line":74,"column":92}},"53":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"54":{"start":{"line":79,"column":12},"end":{"line":79,"column":24}},"55":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"56":{"start":{"line":82,"column":12},"end":{"line":82,"column":24}},"57":{"start":{"line":86,"column":8},"end":{"line":86,"column":36}},"58":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"59":{"start":{"line":88,"column":12},"end":{"line":88,"column":83}},"60":{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},"61":{"start":{"line":91,"column":12},"end":{"line":91,"column":33}},"62":{"start":{"line":92,"column":12},"end":{"line":92,"column":41}},"63":{"start":{"line":93,"column":12},"end":{"line":93,"column":114}},"64":{"start":{"line":95,"column":8},"end":{"line":102,"column":9}},"65":{"start":{"line":96,"column":12},"end":{"line":96,"column":56}},"66":{"start":{"line":97,"column":12},"end":{"line":97,"column":86}},"67":{"start":{"line":97,"column":68},"end":{"line":97,"column":84}},"68":{"start":{"line":98,"column":12},"end":{"line":98,"column":39}},"69":{"start":{"line":101,"column":12},"end":{"line":101,"column":83}},"70":{"start":{"line":105,"column":8},"end":{"line":105,"column":36}},"71":{"start":{"line":106,"column":8},"end":{"line":133,"column":9}},"72":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"73":{"start":{"line":108,"column":16},"end":{"line":108,"column":43}},"74":{"start":{"line":110,"column":35},"end":{"line":110,"column":41}},"75":{"start":{"line":111,"column":38},"end":{"line":126,"column":14}},"76":{"start":{"line":112,"column":33},"end":{"line":112,"column":87}},"77":{"start":{"line":113,"column":16},"end":{"line":125,"column":17}},"78":{"start":{"line":114,"column":40},"end":{"line":114,"column":85}},"79":{"start":{"line":115,"column":38},"end":{"line":115,"column":61}},"80":{"start":{"line":116,"column":20},"end":{"line":121,"column":21}},"81":{"start":{"line":117,"column":24},"end":{"line":117,"column":44}},"82":{"start":{"line":120,"column":24},"end":{"line":120,"column":36}},"83":{"start":{"line":124,"column":20},"end":{"line":124,"column":32}},"84":{"start":{"line":127,"column":35},"end":{"line":127,"column":71}},"85":{"start":{"line":128,"column":43},"end":{"line":128,"column":87}},"86":{"start":{"line":128,"column":74},"end":{"line":128,"column":86}},"87":{"start":{"line":129,"column":12},"end":{"line":129,"column":59}},"88":{"start":{"line":132,"column":12},"end":{"line":132,"column":71}},"89":{"start":{"line":136,"column":8},"end":{"line":165,"column":9}},"90":{"start":{"line":137,"column":32},"end":{"line":137,"column":53}},"91":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"92":{"start":{"line":139,"column":16},"end":{"line":139,"column":119}},"93":{"start":{"line":141,"column":27},"end":{"line":141,"column":36}},"94":{"start":{"line":142,"column":33},"end":{"line":142,"column":89}},"95":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"96":{"start":{"line":144,"column":16},"end":{"line":144,"column":98}},"97":{"start":{"line":146,"column":35},"end":{"line":146,"column":89}},"98":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"99":{"start":{"line":148,"column":16},"end":{"line":148,"column":93}},"100":{"start":{"line":150,"column":29},"end":{"line":150,"column":88}},"101":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"102":{"start":{"line":152,"column":16},"end":{"line":152,"column":113}},"103":{"start":{"line":154,"column":31},"end":{"line":154,"column":88}},"104":{"start":{"line":155,"column":26},"end":{"line":155,"column":100}},"105":{"start":{"line":156,"column":25},"end":{"line":156,"column":79}},"106":{"start":{"line":157,"column":12},"end":{"line":157,"column":100}},"107":{"start":{"line":157,"column":45},"end":{"line":157,"column":98}},"108":{"start":{"line":157,"column":80},"end":{"line":157,"column":97}},"109":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"110":{"start":{"line":159,"column":16},"end":{"line":159,"column":91}},"111":{"start":{"line":161,"column":12},"end":{"line":161,"column":43}},"112":{"start":{"line":164,"column":12},"end":{"line":164,"column":98}},"113":{"start":{"line":168,"column":0},"end":{"line":168,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":18},"end":{"line":45,"column":5}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":27},"end":{"line":59,"column":5}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":26},"end":{"line":50,"column":27}},"loc":{"start":{"line":50,"column":36},"end":{"line":55,"column":13}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":40},"end":{"line":76,"column":5}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":20},"end":{"line":84,"column":5}},"line":77},"12":{"name":"(anonymous_12)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":28},"end":{"line":103,"column":5}},"line":85},"13":{"name":"(anonymous_13)","decl":{"start":{"line":97,"column":53},"end":{"line":97,"column":54}},"loc":{"start":{"line":97,"column":68},"end":{"line":97,"column":84}},"line":97},"14":{"name":"(anonymous_14)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":25},"end":{"line":134,"column":5}},"line":104},"15":{"name":"(anonymous_15)","decl":{"start":{"line":111,"column":58},"end":{"line":111,"column":59}},"loc":{"start":{"line":111,"column":72},"end":{"line":126,"column":13}},"line":111},"16":{"name":"(anonymous_16)","decl":{"start":{"line":128,"column":65},"end":{"line":128,"column":66}},"loc":{"start":{"line":128,"column":74},"end":{"line":128,"column":86}},"line":128},"17":{"name":"(anonymous_17)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":30},"end":{"line":166,"column":5}},"line":135},"18":{"name":"(anonymous_18)","decl":{"start":{"line":157,"column":35},"end":{"line":157,"column":36}},"loc":{"start":{"line":157,"column":45},"end":{"line":157,"column":98}},"line":157},"19":{"name":"(anonymous_19)","decl":{"start":{"line":157,"column":71},"end":{"line":157,"column":72}},"loc":{"start":{"line":157,"column":80},"end":{"line":157,"column":97}},"line":157}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},{"start":{"line":52,"column":16},"end":{"line":54,"column":17}}],"line":52},"20":{"loc":{"start":{"line":63,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":71,"column":13}},{"start":{"line":63,"column":12},"end":{"line":71,"column":13}}],"line":63},"21":{"loc":{"start":{"line":66,"column":17},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":66,"column":17},"end":{"line":71,"column":13}},{"start":{"line":66,"column":17},"end":{"line":71,"column":13}}],"line":66},"22":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"23":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"24":{"loc":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"type":"binary-expr","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":28}},{"start":{"line":81,"column":32},"end":{"line":81,"column":54}}],"line":81},"25":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"26":{"loc":{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},{"start":{"line":90,"column":8},"end":{"line":94,"column":9}}],"line":90},"27":{"loc":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},{"start":{"line":107,"column":12},"end":{"line":109,"column":13}}],"line":107},"28":{"loc":{"start":{"line":116,"column":20},"end":{"line":121,"column":21}},"type":"if","locations":[{"start":{"line":116,"column":20},"end":{"line":121,"column":21}},{"start":{"line":116,"column":20},"end":{"line":121,"column":21}}],"line":116},"29":{"loc":{"start":{"line":116,"column":24},"end":{"line":116,"column":72}},"type":"binary-expr","locations":[{"start":{"line":116,"column":24},"end":{"line":116,"column":48}},{"start":{"line":116,"column":52},"end":{"line":116,"column":72}}],"line":116},"30":{"loc":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},{"start":{"line":138,"column":12},"end":{"line":140,"column":13}}],"line":138},"31":{"loc":{"start":{"line":138,"column":16},"end":{"line":138,"column":46}},"type":"binary-expr","locations":[{"start":{"line":138,"column":16},"end":{"line":138,"column":28}},{"start":{"line":138,"column":32},"end":{"line":138,"column":46}}],"line":138},"32":{"loc":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":12},"end":{"line":145,"column":13}}],"line":143},"33":{"loc":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},{"start":{"line":147,"column":12},"end":{"line":149,"column":13}}],"line":147},"34":{"loc":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},{"start":{"line":151,"column":12},"end":{"line":153,"column":13}}],"line":151},"35":{"loc":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},{"start":{"line":158,"column":12},"end":{"line":160,"column":13}}],"line":158}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":56,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":33,"34":33,"35":33,"36":33,"37":33,"38":44,"39":44,"40":44,"41":14,"42":23,"43":23,"44":5,"45":32,"46":32,"47":32,"48":27,"49":5,"50":4,"51":1,"52":0,"53":7,"54":1,"55":6,"56":2,"57":7,"58":7,"59":3,"60":4,"61":1,"62":1,"63":1,"64":3,"65":3,"66":3,"67":4,"68":3,"69":0,"70":5,"71":5,"72":5,"73":1,"74":4,"75":4,"76":9,"77":9,"78":9,"79":9,"80":9,"81":9,"82":0,"83":0,"84":4,"85":4,"86":9,"87":4,"88":0,"89":26,"90":26,"91":26,"92":4,"93":22,"94":22,"95":22,"96":4,"97":18,"98":18,"99":3,"100":15,"101":15,"102":1,"103":14,"104":14,"105":14,"106":14,"107":71768,"108":147402,"109":14,"110":1,"111":13,"112":0,"113":1},"f":{"0":148,"1":56,"2":0,"3":1,"4":0,"5":1,"6":1,"7":33,"8":44,"9":23,"10":32,"11":7,"12":7,"13":4,"14":5,"15":9,"16":9,"17":26,"18":71768,"19":147402},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[1,1,1],"17":[0,1],"18":[1,1],"19":[5,18],"20":[27,5],"21":[4,1],"22":[1,6],"23":[2,4],"24":[6,5],"25":[3,4],"26":[1,3],"27":[1,4],"28":[9,0],"29":[9,9],"30":[4,22],"31":[26,22],"32":[4,18],"33":[3,15],"34":[1,14],"35":[1,13]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/InsightFacade.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport {Section} from \"./Section\";\nimport * as fs from \"fs-extra\";\nimport path from \"node:path\";\nimport {QueryHelper} from \"./helper\";\nimport {SectionsDatasetHelper} from \"./Sectionsdatahelper\";\nimport {RoomsDatasetHelper} from \"./RoomDatasetHelper\";\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\t// Property to track dataset IDs\n\tprivate datasetIds: string[] = [];\n\tprivate queryHelper: QueryHelper;\n\tprivate sectionsHelper: SectionsDatasetHelper;\n\n\tprivate roomsHelper: RoomsDatasetHelper;\n\n\tconstructor() {\n\t\tthis.queryHelper = new QueryHelper();\n\t\tthis.sectionsHelper = new SectionsDatasetHelper(this.datasetIds);\n\t\tthis.roomsHelper = new RoomsDatasetHelper(this.datasetIds);\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t}\n\n\tpublic async loadDatasetIds() {\n\t\tconst dataFolderPath = \"data\"; // Path to the data folder\n\t\ttry {\n\t\t\t// Read the contents of the data folder\n\t\t\tconst files = await fs.readdir(dataFolderPath);\n\t\t\t// Extract dataset IDs from file names\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst id = file.replace(\".json\", \"\"); // Remove the file extension\n\t\t\t\tif (!this.datasetIds.includes(id)) {\n\t\t\t\t\tthis.datasetIds.push(id);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\t// console.error(\"Error reading data folder:\", err);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a dataset to the system.\n\t *\n\t * @param id The unique identifier for the dataset to be added.\n\t * @param content The content of the dataset, likely encoded in some format.\n\t * @param kind The type of the dataset (e.g., courses, rooms).\n\t * @returns A promise that resolves to an array of the current dataset IDs upon success.\n\t */\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tawait this.loadDatasetIds();\n\t\ttry {\n\t\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\t\treturn this.sectionsHelper.addDatasetSection(id, content, kind);\n\t\t\t} else if (kind === InsightDatasetKind.Rooms) {\n\t\t\t\t// Use RoomsDatasetHelper when it exists\n\t\t\t\treturn this.roomsHelper.addDataset(id, content,kind);\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid dataset kind.\"));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Handle errors here\n\t\t\treturn Promise.reject(new InsightError(\"incorrect something\"));\n\t\t}\n\t}\n\n\tprivate isInvalidID(id: string) {\n\t\tif (!id) {\n\t\t\treturn true;\n\t\t}\n\t\tif (id.includes(\"_\") || id.trim().length === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\tawait this.loadDatasetIds();\n\t\t// check if ID is valid\n\t\tif (this.isInvalidID(id)) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid ID\"));\n\t\t}\n\t\t// check if ID already exists\n\t\tif (!this.datasetIds.includes(id)) {\n\t\t\tconsole.log(\"Debug\");\n\t\t\tconsole.log(this.datasetIds);\n\t\t\treturn Promise.reject(new NotFoundError(\"This ID does not exist in the datasetIDs\"));\n\t\t}\n\t\t// Actually remove the data\n\t\ttry {\n\t\t\tawait fs.promises.unlink(`data/${id}.json`);\n\t\t\t// Successfully removed the file, now remove the id from datasetIds if necessary\n\t\t\tthis.datasetIds = this.datasetIds.filter((datasetId) => datasetId !== id);\n\t\t\treturn Promise.resolve(id); // Resolve with the id of the removed dataset\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new InsightError(\"Some error\"));\n\t\t}\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tawait this.loadDatasetIds();\n\t\ttry {\n\t\t\tif (this.datasetIds.length === 0) {\n\t\t\t\treturn Promise.resolve([]); // Return empty array if no dataset IDs are available\n\t\t\t}\n\t\t\tconst dataFolderPath = \"data\";\n\n\t\t\tconst readFilesPromises = this.datasetIds.map(async (id) => {\n\t\t\t\tconst filePath = path.join(dataFolderPath, `${id}.json`);\n\t\t\t\ttry {\n\t\t\t\t\tconst fileContent = await fs.promises.readFile(filePath, \"utf-8\");\n\t\t\t\t\tconst jsonArray = JSON.parse(fileContent);\n\n\t\t\t\t\tif (Array.isArray(jsonArray) && jsonArray.length > 0) {\n\t\t\t\t\t\treturn jsonArray[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null; // If file content is empty or not an array\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn null; // Skip if file doesn't exist or cannot be read\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst datasetObjects = await Promise.all(readFilesPromises);\n\t\t\t// Filter out null values (failed reads or empty arrays)\n\t\t\tconst filteredDatasetObjects = datasetObjects.filter((obj) => obj !== null);\n\n\t\t\treturn Promise.resolve(filteredDatasetObjects);\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new Error(\"Error listing datasets\"));\n\t\t}\n\t}\n\n\tpublic async performQuery(query: any): Promise<InsightResult[]> {\n\t\ttry {\n\t\t\tconst queryString = JSON.stringify(query);\n\n\t\t\t// Check if WHERE and OPTIONS properties exist\n\t\t\tif (!query.WHERE || !query.OPTIONS) {\n\t\t\t\treturn Promise.reject(new InsightError(\"WHERE and OPTIONS properties are required.\"));\n\t\t\t}\n\n\t\t\t// Validate WHERE clause\n\t\t\tconst allIDs: Set<string> = new Set<string>();\n\t\t\tconst isValidWhere = this.queryHelper.isValidWhereClause(query.WHERE, allIDs);\n\t\t\tif (!isValidWhere) {\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid WHERE clause.\"));\n\t\t\t}\n\n\t\t\t// Validate OPTIONS\n\t\t\tconst isValidOptions = this.queryHelper.isValidOptions(query.OPTIONS, allIDs);\n\t\t\tif (!isValidOptions) {\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid OPTIONS.\"));\n\t\t\t}\n\n\t\t\t// Check if the dataset ID exists\n\t\t\tconst idExists = await this.queryHelper.checkIDExists(Array.from(allIDs)[0]);\n\t\t\tif (!idExists) {\n\t\t\t\treturn Promise.reject(new InsightError(\"IDs not found in the data directory.\"));\n\t\t\t}\n\n\t\t\t// Perform the query\n\t\t\tconst condString = this.queryHelper.traverseWhereClause(query.WHERE, allIDs);\n\t\t\tconst items = await this.queryHelper.getMatchingItems(Array.from(allIDs)[0], condString);\n\t\t\tlet wanted = this.queryHelper.traverseOptions(items, query.OPTIONS);\n\t\t\twanted = wanted.filter((item: any) => Object.values(item).every((val: any) => val !== undefined));\n\n\t\t\t// Check if the result is too large\n\t\t\tif (wanted.length > 5000) {\n\t\t\t\treturn Promise.reject(new ResultTooLargeError(\"Too big\"));\n\t\t\t}\n\n\t\t\t// Return the result\n\t\t\treturn Promise.resolve(wanted);\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new InsightError(\"Error parsing query JSON.\"));\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60b8cd958d15f2aca7d157fdbd50b748d77f59d4","contentHash":"f83847d8535b8dc1ec99d785b798ff2205cc655b47d350598f1c001c4e954c4c"},"/Users/rishishukla/Desktop/project_team067/src/controller/IInsightFacade.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":63,"6":63,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":63,"2":1,"3":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/IInsightFacade.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cd6d52bca053f4ad4904b8b5eaac18287a84aea6","contentHash":"3bffc1c07b7d234abb3aed4f836b70cb941c7d56141e5e3f0e048d39b6a9977a"},"/Users/rishishukla/Desktop/project_team067/src/controller/helper.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/helper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"26":{"start":{"line":27,"column":11},"end":{"line":27,"column":38}},"27":{"start":{"line":28,"column":25},"end":{"line":28,"column":52}},"28":{"start":{"line":29,"column":23},"end":{"line":30,"column":49}},"29":{"start":{"line":33,"column":25},"end":{"line":33,"column":42}},"30":{"start":{"line":34,"column":8},"end":{"line":40,"column":9}},"31":{"start":{"line":35,"column":12},"end":{"line":35,"column":66}},"32":{"start":{"line":36,"column":12},"end":{"line":36,"column":24}},"33":{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},"34":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"35":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"36":{"start":{"line":46,"column":31},"end":{"line":46,"column":75}},"37":{"start":{"line":47,"column":25},"end":{"line":47,"column":46}},"38":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"39":{"start":{"line":49,"column":12},"end":{"line":49,"column":25}},"40":{"start":{"line":52,"column":8},"end":{"line":52,"column":50}},"41":{"start":{"line":53,"column":8},"end":{"line":96,"column":9}},"42":{"start":{"line":54,"column":12},"end":{"line":54,"column":50}},"43":{"start":{"line":55,"column":12},"end":{"line":62,"column":13}},"44":{"start":{"line":56,"column":16},"end":{"line":61,"column":17}},"45":{"start":{"line":57,"column":20},"end":{"line":57,"column":39}},"46":{"start":{"line":60,"column":20},"end":{"line":60,"column":33}},"47":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"48":{"start":{"line":64,"column":16},"end":{"line":64,"column":29}},"49":{"start":{"line":66,"column":12},"end":{"line":66,"column":59}},"50":{"start":{"line":68,"column":13},"end":{"line":96,"column":9}},"51":{"start":{"line":69,"column":12},"end":{"line":69,"column":50}},"52":{"start":{"line":70,"column":12},"end":{"line":77,"column":13}},"53":{"start":{"line":71,"column":16},"end":{"line":76,"column":17}},"54":{"start":{"line":72,"column":20},"end":{"line":72,"column":39}},"55":{"start":{"line":75,"column":20},"end":{"line":75,"column":33}},"56":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"57":{"start":{"line":79,"column":16},"end":{"line":79,"column":29}},"58":{"start":{"line":81,"column":12},"end":{"line":81,"column":57}},"59":{"start":{"line":83,"column":13},"end":{"line":96,"column":9}},"60":{"start":{"line":84,"column":28},"end":{"line":84,"column":43}},"61":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"62":{"start":{"line":86,"column":16},"end":{"line":86,"column":29}},"63":{"start":{"line":88,"column":12},"end":{"line":88,"column":86}},"64":{"start":{"line":88,"column":45},"end":{"line":88,"column":84}},"65":{"start":{"line":90,"column":13},"end":{"line":96,"column":9}},"66":{"start":{"line":91,"column":35},"end":{"line":91,"column":50}},"67":{"start":{"line":92,"column":12},"end":{"line":92,"column":67}},"68":{"start":{"line":95,"column":12},"end":{"line":95,"column":25}},"69":{"start":{"line":99,"column":32},"end":{"line":99,"column":52}},"70":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"71":{"start":{"line":101,"column":12},"end":{"line":101,"column":81}},"72":{"start":{"line":103,"column":8},"end":{"line":103,"column":20}},"73":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"74":{"start":{"line":107,"column":12},"end":{"line":107,"column":25}},"75":{"start":{"line":109,"column":20},"end":{"line":109,"column":42}},"76":{"start":{"line":110,"column":22},"end":{"line":110,"column":33}},"77":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"78":{"start":{"line":112,"column":12},"end":{"line":112,"column":25}},"79":{"start":{"line":114,"column":30},"end":{"line":114,"column":48}},"80":{"start":{"line":115,"column":8},"end":{"line":119,"column":9}},"81":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"82":{"start":{"line":117,"column":16},"end":{"line":117,"column":29}},"83":{"start":{"line":120,"column":8},"end":{"line":120,"column":20}},"84":{"start":{"line":123,"column":8},"end":{"line":123,"column":64}},"85":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"86":{"start":{"line":127,"column":12},"end":{"line":127,"column":25}},"87":{"start":{"line":129,"column":8},"end":{"line":134,"column":9}},"88":{"start":{"line":133,"column":12},"end":{"line":133,"column":25}},"89":{"start":{"line":135,"column":8},"end":{"line":139,"column":9}},"90":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"91":{"start":{"line":137,"column":16},"end":{"line":137,"column":29}},"92":{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},"93":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"94":{"start":{"line":142,"column":16},"end":{"line":142,"column":29}},"95":{"start":{"line":145,"column":8},"end":{"line":145,"column":20}},"96":{"start":{"line":148,"column":28},"end":{"line":148,"column":45}},"97":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"98":{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},"99":{"start":{"line":152,"column":33},"end":{"line":152,"column":44}},"100":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"101":{"start":{"line":154,"column":12},"end":{"line":154,"column":25}},"102":{"start":{"line":156,"column":30},"end":{"line":156,"column":115}},"103":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"104":{"start":{"line":158,"column":12},"end":{"line":158,"column":25}},"105":{"start":{"line":160,"column":8},"end":{"line":160,"column":20}},"106":{"start":{"line":163,"column":25},"end":{"line":163,"column":46}},"107":{"start":{"line":164,"column":24},"end":{"line":164,"column":39}},"108":{"start":{"line":166,"column":8},"end":{"line":190,"column":9}},"109":{"start":{"line":167,"column":34},"end":{"line":167,"column":36}},"110":{"start":{"line":168,"column":12},"end":{"line":171,"column":13}},"111":{"start":{"line":169,"column":37},"end":{"line":169,"column":83}},"112":{"start":{"line":170,"column":16},"end":{"line":170,"column":49}},"113":{"start":{"line":172,"column":12},"end":{"line":172,"column":51}},"114":{"start":{"line":173,"column":12},"end":{"line":173,"column":41}},"115":{"start":{"line":175,"column":13},"end":{"line":190,"column":9}},"116":{"start":{"line":176,"column":34},"end":{"line":176,"column":36}},"117":{"start":{"line":177,"column":12},"end":{"line":180,"column":13}},"118":{"start":{"line":178,"column":37},"end":{"line":178,"column":83}},"119":{"start":{"line":179,"column":16},"end":{"line":179,"column":49}},"120":{"start":{"line":181,"column":12},"end":{"line":181,"column":51}},"121":{"start":{"line":182,"column":12},"end":{"line":182,"column":41}},"122":{"start":{"line":184,"column":13},"end":{"line":190,"column":9}},"123":{"start":{"line":185,"column":33},"end":{"line":185,"column":74}},"124":{"start":{"line":186,"column":12},"end":{"line":186,"column":45}},"125":{"start":{"line":189,"column":12},"end":{"line":189,"column":65}},"126":{"start":{"line":191,"column":8},"end":{"line":191,"column":25}},"127":{"start":{"line":194,"column":25},"end":{"line":194,"column":47}},"128":{"start":{"line":195,"column":24},"end":{"line":195,"column":40}},"129":{"start":{"line":196,"column":29},"end":{"line":196,"column":63}},"130":{"start":{"line":197,"column":22},"end":{"line":197,"column":48}},"131":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"132":{"start":{"line":199,"column":12},"end":{"line":199,"column":55}},"133":{"start":{"line":201,"column":8},"end":{"line":204,"column":9}},"134":{"start":{"line":202,"column":22},"end":{"line":202,"column":48}},"135":{"start":{"line":203,"column":12},"end":{"line":203,"column":58}},"136":{"start":{"line":205,"column":8},"end":{"line":216,"column":9}},"137":{"start":{"line":207,"column":16},"end":{"line":207,"column":50}},"138":{"start":{"line":209,"column":16},"end":{"line":209,"column":46}},"139":{"start":{"line":211,"column":16},"end":{"line":211,"column":46}},"140":{"start":{"line":213,"column":16},"end":{"line":213,"column":48}},"141":{"start":{"line":215,"column":16},"end":{"line":215,"column":88}},"142":{"start":{"line":219,"column":8},"end":{"line":234,"column":9}},"143":{"start":{"line":220,"column":25},"end":{"line":220,"column":79}},"144":{"start":{"line":221,"column":29},"end":{"line":221,"column":45}},"145":{"start":{"line":222,"column":34},"end":{"line":222,"column":36}},"146":{"start":{"line":223,"column":12},"end":{"line":229,"column":13}},"147":{"start":{"line":224,"column":16},"end":{"line":228,"column":17}},"148":{"start":{"line":225,"column":20},"end":{"line":227,"column":21}},"149":{"start":{"line":225,"column":61},"end":{"line":225,"column":80}},"150":{"start":{"line":226,"column":24},"end":{"line":226,"column":49}},"151":{"start":{"line":230,"column":12},"end":{"line":230,"column":33}},"152":{"start":{"line":233,"column":12},"end":{"line":233,"column":72}},"153":{"start":{"line":237,"column":27},"end":{"line":237,"column":112}},"154":{"start":{"line":238,"column":8},"end":{"line":241,"column":9}},"155":{"start":{"line":239,"column":26},"end":{"line":239,"column":63}},"156":{"start":{"line":240,"column":12},"end":{"line":240,"column":70}},"157":{"start":{"line":242,"column":8},"end":{"line":242,"column":25}},"158":{"start":{"line":245,"column":8},"end":{"line":254,"column":9}},"159":{"start":{"line":246,"column":12},"end":{"line":246,"column":66}},"160":{"start":{"line":247,"column":30},"end":{"line":247,"column":73}},"161":{"start":{"line":248,"column":27},"end":{"line":248,"column":42}},"162":{"start":{"line":249,"column":12},"end":{"line":249,"column":28}},"163":{"start":{"line":252,"column":12},"end":{"line":252,"column":64}},"164":{"start":{"line":253,"column":12},"end":{"line":253,"column":25}},"165":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"166":{"start":{"line":258,"column":12},"end":{"line":258,"column":72}},"167":{"start":{"line":260,"column":32},"end":{"line":260,"column":52}},"168":{"start":{"line":261,"column":30},"end":{"line":268,"column":10}},"169":{"start":{"line":262,"column":33},"end":{"line":262,"column":35}},"170":{"start":{"line":263,"column":12},"end":{"line":266,"column":15}},"171":{"start":{"line":264,"column":36},"end":{"line":264,"column":55}},"172":{"start":{"line":265,"column":16},"end":{"line":265,"column":56}},"173":{"start":{"line":267,"column":12},"end":{"line":267,"column":32}},"174":{"start":{"line":269,"column":8},"end":{"line":282,"column":9}},"175":{"start":{"line":270,"column":31},"end":{"line":270,"column":49}},"176":{"start":{"line":271,"column":12},"end":{"line":281,"column":15}},"177":{"start":{"line":272,"column":16},"end":{"line":280,"column":17}},"178":{"start":{"line":273,"column":20},"end":{"line":273,"column":30}},"179":{"start":{"line":275,"column":21},"end":{"line":280,"column":17}},"180":{"start":{"line":276,"column":20},"end":{"line":276,"column":29}},"181":{"start":{"line":279,"column":20},"end":{"line":279,"column":29}},"182":{"start":{"line":283,"column":8},"end":{"line":283,"column":29}},"183":{"start":{"line":286,"column":0},"end":{"line":286,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":28},"end":{"line":41,"column":5}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":38},"end":{"line":97,"column":5}},"line":42},"8":{"name":"(anonymous_8)","decl":{"start":{"line":88,"column":33},"end":{"line":88,"column":34}},"loc":{"start":{"line":88,"column":45},"end":{"line":88,"column":84}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":26},"end":{"line":104,"column":5}},"line":98},"10":{"name":"(anonymous_10)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":28},"end":{"line":121,"column":5}},"line":105},"11":{"name":"(anonymous_11)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":34},"end":{"line":124,"column":5}},"line":122},"12":{"name":"(anonymous_12)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":36},"end":{"line":146,"column":5}},"line":125},"13":{"name":"(anonymous_13)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":34},"end":{"line":161,"column":5}},"line":147},"14":{"name":"(anonymous_14)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":39},"end":{"line":192,"column":5}},"line":162},"15":{"name":"(anonymous_15)","decl":{"start":{"line":193,"column":4},"end":{"line":193,"column":5}},"loc":{"start":{"line":193,"column":41},"end":{"line":217,"column":5}},"line":193},"16":{"name":"(anonymous_16)","decl":{"start":{"line":218,"column":4},"end":{"line":218,"column":5}},"loc":{"start":{"line":218,"column":42},"end":{"line":235,"column":5}},"line":218},"17":{"name":"(anonymous_17)","decl":{"start":{"line":225,"column":50},"end":{"line":225,"column":51}},"loc":{"start":{"line":225,"column":61},"end":{"line":225,"column":80}},"line":225},"18":{"name":"(anonymous_18)","decl":{"start":{"line":236,"column":4},"end":{"line":236,"column":5}},"loc":{"start":{"line":236,"column":41},"end":{"line":243,"column":5}},"line":236},"19":{"name":"(anonymous_19)","decl":{"start":{"line":244,"column":4},"end":{"line":244,"column":5}},"loc":{"start":{"line":244,"column":39},"end":{"line":255,"column":5}},"line":244},"20":{"name":"(anonymous_20)","decl":{"start":{"line":256,"column":4},"end":{"line":256,"column":5}},"loc":{"start":{"line":256,"column":41},"end":{"line":284,"column":5}},"line":256},"21":{"name":"(anonymous_21)","decl":{"start":{"line":261,"column":40},"end":{"line":261,"column":41}},"loc":{"start":{"line":261,"column":50},"end":{"line":268,"column":9}},"line":261},"22":{"name":"(anonymous_22)","decl":{"start":{"line":263,"column":36},"end":{"line":263,"column":37}},"loc":{"start":{"line":263,"column":47},"end":{"line":266,"column":13}},"line":263},"23":{"name":"(anonymous_23)","decl":{"start":{"line":271,"column":31},"end":{"line":271,"column":32}},"loc":{"start":{"line":271,"column":41},"end":{"line":281,"column":13}},"line":271}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"17":{"loc":{"start":{"line":43,"column":14},"end":{"line":43,"column":48}},"type":"binary-expr","locations":[{"start":{"line":43,"column":14},"end":{"line":43,"column":19}},{"start":{"line":43,"column":23},"end":{"line":43,"column":48}}],"line":43},"18":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"19":{"loc":{"start":{"line":53,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":96,"column":9}},{"start":{"line":53,"column":8},"end":{"line":96,"column":9}}],"line":53},"20":{"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":71}},"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":29}},{"start":{"line":53,"column":33},"end":{"line":53,"column":50}},{"start":{"line":53,"column":54},"end":{"line":53,"column":71}}],"line":53},"21":{"loc":{"start":{"line":55,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":62,"column":13}},{"start":{"line":55,"column":12},"end":{"line":62,"column":13}}],"line":55},"22":{"loc":{"start":{"line":56,"column":16},"end":{"line":61,"column":17}},"type":"if","locations":[{"start":{"line":56,"column":16},"end":{"line":61,"column":17}},{"start":{"line":56,"column":16},"end":{"line":61,"column":17}}],"line":56},"23":{"loc":{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":65,"column":13}},{"start":{"line":63,"column":12},"end":{"line":65,"column":13}}],"line":63},"24":{"loc":{"start":{"line":68,"column":13},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":13},"end":{"line":96,"column":9}},{"start":{"line":68,"column":13},"end":{"line":96,"column":9}}],"line":68},"25":{"loc":{"start":{"line":70,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":77,"column":13}},{"start":{"line":70,"column":12},"end":{"line":77,"column":13}}],"line":70},"26":{"loc":{"start":{"line":71,"column":16},"end":{"line":76,"column":17}},"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":76,"column":17}},{"start":{"line":71,"column":16},"end":{"line":76,"column":17}}],"line":71},"27":{"loc":{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":80,"column":13}},{"start":{"line":78,"column":12},"end":{"line":80,"column":13}}],"line":78},"28":{"loc":{"start":{"line":83,"column":13},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":13},"end":{"line":96,"column":9}},{"start":{"line":83,"column":13},"end":{"line":96,"column":9}}],"line":83},"29":{"loc":{"start":{"line":83,"column":17},"end":{"line":83,"column":56}},"type":"binary-expr","locations":[{"start":{"line":83,"column":17},"end":{"line":83,"column":35}},{"start":{"line":83,"column":39},"end":{"line":83,"column":56}}],"line":83},"30":{"loc":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},{"start":{"line":85,"column":12},"end":{"line":87,"column":13}}],"line":85},"31":{"loc":{"start":{"line":85,"column":16},"end":{"line":85,"column":61}},"type":"binary-expr","locations":[{"start":{"line":85,"column":16},"end":{"line":85,"column":39}},{"start":{"line":85,"column":43},"end":{"line":85,"column":61}}],"line":85},"32":{"loc":{"start":{"line":90,"column":13},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":13},"end":{"line":96,"column":9}},{"start":{"line":90,"column":13},"end":{"line":96,"column":9}}],"line":90},"33":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100},"34":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"35":{"loc":{"start":{"line":106,"column":14},"end":{"line":106,"column":50}},"type":"binary-expr","locations":[{"start":{"line":106,"column":14},"end":{"line":106,"column":20}},{"start":{"line":106,"column":24},"end":{"line":106,"column":50}}],"line":106},"36":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"37":{"loc":{"start":{"line":111,"column":12},"end":{"line":111,"column":64}},"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":35}},{"start":{"line":111,"column":39},"end":{"line":111,"column":64}}],"line":111},"38":{"loc":{"start":{"line":115,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":119,"column":9}},{"start":{"line":115,"column":8},"end":{"line":119,"column":9}}],"line":115},"39":{"loc":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},{"start":{"line":116,"column":12},"end":{"line":118,"column":13}}],"line":116},"40":{"loc":{"start":{"line":116,"column":16},"end":{"line":116,"column":69}},"type":"binary-expr","locations":[{"start":{"line":116,"column":16},"end":{"line":116,"column":33}},{"start":{"line":116,"column":37},"end":{"line":116,"column":69}}],"line":116},"41":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"42":{"loc":{"start":{"line":126,"column":14},"end":{"line":126,"column":52}},"type":"binary-expr","locations":[{"start":{"line":126,"column":14},"end":{"line":126,"column":21}},{"start":{"line":126,"column":25},"end":{"line":126,"column":52}}],"line":126},"43":{"loc":{"start":{"line":129,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":134,"column":9}},{"start":{"line":129,"column":8},"end":{"line":134,"column":9}}],"line":129},"44":{"loc":{"start":{"line":129,"column":12},"end":{"line":132,"column":43}},"type":"binary-expr","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":28}},{"start":{"line":130,"column":12},"end":{"line":130,"column":43}},{"start":{"line":131,"column":12},"end":{"line":131,"column":40}},{"start":{"line":132,"column":12},"end":{"line":132,"column":43}}],"line":129},"45":{"loc":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},{"start":{"line":136,"column":12},"end":{"line":138,"column":13}}],"line":136},"46":{"loc":{"start":{"line":136,"column":16},"end":{"line":136,"column":81}},"type":"binary-expr","locations":[{"start":{"line":136,"column":16},"end":{"line":136,"column":42}},{"start":{"line":136,"column":46},"end":{"line":136,"column":81}}],"line":136},"47":{"loc":{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},{"start":{"line":140,"column":8},"end":{"line":144,"column":9}}],"line":140},"48":{"loc":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},{"start":{"line":141,"column":12},"end":{"line":143,"column":13}}],"line":141},"49":{"loc":{"start":{"line":141,"column":16},"end":{"line":141,"column":95}},"type":"binary-expr","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":49}},{"start":{"line":141,"column":53},"end":{"line":141,"column":95}}],"line":141},"50":{"loc":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},{"start":{"line":149,"column":8},"end":{"line":151,"column":9}}],"line":149},"51":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{"line":153,"column":8},"end":{"line":155,"column":9}}],"line":153},"52":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{"line":157,"column":8},"end":{"line":159,"column":9}}],"line":157},"53":{"loc":{"start":{"line":166,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":190,"column":9}},{"start":{"line":166,"column":8},"end":{"line":190,"column":9}}],"line":166},"54":{"loc":{"start":{"line":175,"column":13},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":13},"end":{"line":190,"column":9}},{"start":{"line":175,"column":13},"end":{"line":190,"column":9}}],"line":175},"55":{"loc":{"start":{"line":184,"column":13},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":184,"column":13},"end":{"line":190,"column":9}},{"start":{"line":184,"column":13},"end":{"line":190,"column":9}}],"line":184},"56":{"loc":{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":200,"column":9}},{"start":{"line":198,"column":8},"end":{"line":200,"column":9}}],"line":198},"57":{"loc":{"start":{"line":201,"column":8},"end":{"line":204,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":204,"column":9}},{"start":{"line":201,"column":8},"end":{"line":204,"column":9}}],"line":201},"58":{"loc":{"start":{"line":201,"column":12},"end":{"line":201,"column":81}},"type":"binary-expr","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":29}},{"start":{"line":201,"column":33},"end":{"line":201,"column":58}},{"start":{"line":201,"column":62},"end":{"line":201,"column":81}}],"line":201},"59":{"loc":{"start":{"line":205,"column":8},"end":{"line":216,"column":9}},"type":"switch","locations":[{"start":{"line":206,"column":12},"end":{"line":207,"column":50}},{"start":{"line":208,"column":12},"end":{"line":209,"column":46}},{"start":{"line":210,"column":12},"end":{"line":211,"column":46}},{"start":{"line":212,"column":12},"end":{"line":213,"column":48}},{"start":{"line":214,"column":12},"end":{"line":215,"column":88}}],"line":205},"60":{"loc":{"start":{"line":224,"column":16},"end":{"line":228,"column":17}},"type":"if","locations":[{"start":{"line":224,"column":16},"end":{"line":228,"column":17}},{"start":{"line":224,"column":16},"end":{"line":228,"column":17}}],"line":224},"61":{"loc":{"start":{"line":225,"column":20},"end":{"line":227,"column":21}},"type":"if","locations":[{"start":{"line":225,"column":20},"end":{"line":227,"column":21}},{"start":{"line":225,"column":20},"end":{"line":227,"column":21}}],"line":225},"62":{"loc":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},{"start":{"line":257,"column":8},"end":{"line":259,"column":9}}],"line":257},"63":{"loc":{"start":{"line":269,"column":8},"end":{"line":282,"column":9}},"type":"if","locations":[{"start":{"line":269,"column":8},"end":{"line":282,"column":9}},{"start":{"line":269,"column":8},"end":{"line":282,"column":9}}],"line":269},"64":{"loc":{"start":{"line":272,"column":16},"end":{"line":280,"column":17}},"type":"if","locations":[{"start":{"line":272,"column":16},"end":{"line":280,"column":17}},{"start":{"line":272,"column":16},"end":{"line":280,"column":17}}],"line":272},"65":{"loc":{"start":{"line":275,"column":21},"end":{"line":280,"column":17}},"type":"if","locations":[{"start":{"line":275,"column":21},"end":{"line":280,"column":17}},{"start":{"line":275,"column":21},"end":{"line":280,"column":17}}],"line":275}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":29,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":15,"30":15,"31":15,"32":14,"33":1,"34":77,"35":0,"36":77,"37":77,"38":77,"39":0,"40":77,"41":77,"42":32,"43":32,"44":19,"45":19,"46":0,"47":32,"48":0,"49":32,"50":45,"51":14,"52":14,"53":1,"54":1,"55":0,"56":14,"57":0,"58":14,"59":31,"60":25,"61":25,"62":2,"63":23,"64":49,"65":6,"66":6,"67":6,"68":0,"69":46,"70":46,"71":0,"72":46,"73":14,"74":0,"75":14,"76":14,"77":14,"78":1,"79":13,"80":13,"81":6,"82":1,"83":12,"84":32,"85":18,"86":0,"87":18,"88":1,"89":17,"90":44,"91":1,"92":16,"93":15,"94":1,"95":15,"96":58,"97":58,"98":0,"99":58,"100":58,"101":1,"102":57,"103":57,"104":0,"105":57,"106":50,"107":50,"108":50,"109":8,"110":8,"111":18,"112":18,"113":8,"114":8,"115":42,"116":7,"117":7,"118":14,"119":14,"120":7,"121":7,"122":35,"123":4,"124":4,"125":31,"126":50,"127":31,"128":31,"129":31,"130":31,"131":31,"132":0,"133":31,"134":5,"135":5,"136":26,"137":4,"138":10,"139":4,"140":8,"141":0,"142":14,"143":14,"144":14,"145":14,"146":14,"147":904582,"148":71768,"149":717666,"150":71768,"151":14,"152":0,"153":904582,"154":904582,"155":9045820,"156":9045820,"157":904582,"158":904582,"159":904582,"160":904582,"161":904582,"162":904582,"163":0,"164":0,"165":14,"166":0,"167":14,"168":14,"169":71768,"170":71768,"171":147404,"172":147404,"173":71768,"174":14,"175":13,"176":13,"177":960535,"178":495941,"179":464594,"180":302379,"181":162215,"182":14,"183":1},"f":{"0":103,"1":29,"2":0,"3":1,"4":0,"5":1,"6":15,"7":77,"8":49,"9":46,"10":14,"11":32,"12":18,"13":58,"14":50,"15":31,"16":14,"17":717666,"18":904582,"19":904582,"20":14,"21":71768,"22":147404,"23":960535},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[0,77],"17":[77,77],"18":[0,77],"19":[32,45],"20":[77,71,55],"21":[19,13],"22":[19,0],"23":[0,32],"24":[14,31],"25":[1,13],"26":[1,0],"27":[0,14],"28":[25,6],"29":[31,18],"30":[2,23],"31":[25,25],"32":[6,0],"33":[0,46],"34":[0,14],"35":[14,14],"36":[1,13],"37":[14,14],"38":[6,7],"39":[1,5],"40":[6,2],"41":[0,18],"42":[18,18],"43":[1,17],"44":[18,18,18,18],"45":[1,43],"46":[44,44],"47":[15,1],"48":[1,14],"49":[15,14],"50":[0,58],"51":[1,57],"52":[0,57],"53":[8,42],"54":[7,35],"55":[4,31],"56":[0,31],"57":[5,26],"58":[31,9,9],"59":[4,10,4,8,0],"60":[71768,832814],"61":[71768,0],"62":[0,14],"63":[13,1],"64":[495941,464594],"65":[302379,162215]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/helper.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\nimport {InsightError} from \"./IInsightFacade\"; // Import the 'fs' module for file operations\n// QueryHelper.ts\n// Set of valid suffixes used for checking the validity of suffixes in\n// various contexts. Used to see whether a suffix is one of the following\nconst VALID_SUFFIXES = new Set([\"avg\", \"pass\", \"fail\", \"audit\", \"year\",\n\t\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"]);\nexport class QueryHelper {\n\tpublic async checkIDExists(id: string): Promise<boolean> {\n\t\tconst filePath = `data/${id}.json`;\n\t\ttry {\n\t\t\tawait fs.promises.access(filePath, fs.constants.F_OK);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic isValidWhereClause(where: any, allIDs: Set<string>): boolean {\n\t\t// Check if WHERE is an object\n\t\tif (!(where && typeof where === \"object\")) {\n\t\t\treturn false;\n\t\t}\n\t\tconst validOperators = [\"LT\", \"GT\", \"EQ\", \"IS\", \"AND\", \"OR\", \"NOT\"];\n\t\tconst operator = Object.keys(where)[0];\n\t\tif (!validOperators.includes(operator)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Validate the WHERE clause based on the operator\n\t\tlet leafKey, prefix, suffix;\n\t\tleafKey = Object.keys(where[operator])[0];\n\t\tif (operator === \"LT\" || operator === \"GT\" || operator === \"EQ\") {\n\t\t\t[prefix, suffix] = leafKey.split(\"_\");\n\t\t\tif (!allIDs.has(prefix)) {\n\t\t\t\tif (allIDs.size === 0) {\n\t\t\t\t\tallIDs.add(prefix);\n\t\t\t\t} else {\n\t\t\t\t\treturn false; // Error: Inconsistent prefixes\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.isValidSuffix(suffix)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.isValidComparator(where[operator]);\n\t\t} else if (operator === \"IS\") {\n\t\t\t[prefix, suffix] = leafKey.split(\"_\");\n\t\t\tif (!allIDs.has(prefix)) {\n\t\t\t\tif (allIDs.size === 0) {\n\t\t\t\t\tallIDs.add(prefix);\n\t\t\t\t} else {\n\t\t\t\t\treturn false; // Error: Inconsistent prefixes\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.isValidSuffix(suffix)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.isValidISFilter(where[operator]);\n\t\t} else if (operator === \"AND\" || operator === \"OR\") {\n\t\t\tconst filters = where[operator];\n\t\t\tif (!Array.isArray(filters) || filters.length < 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn filters.every((filter: any) => this.isValidWhereClause(filter, allIDs));\n\t\t} else if (operator === \"NOT\") {\n\t\t\tconst negationFilter = where[operator];\n\t\t\treturn this.isValidWhereClause(negationFilter, allIDs);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic isValidSuffix(suffix: string): boolean {\n\t\t// Convert suffix to lowercase for case-insensitive comparison\n\t\tconst lowerCaseSuffix = suffix.toLowerCase();\n\n\t\t// Check if the suffix is in the set of valid suffixes\n\t\tif (!VALID_SUFFIXES.has(lowerCaseSuffix)) {\n\t\t\tthrow new InsightError(`Invalid suffix: ${suffix}`);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic isValidISFilter(filter: any): boolean {\n\t\t// Check if IS filter is an object with a single key-value pair\n\t\tif (!(filter && typeof filter === \"object\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = Object.keys(filter)[0];\n\t\tconst value = filter[key];\n\n\t\t// Check if key and value are strings\n\t\tif (typeof key !== \"string\" || typeof value !== \"string\") {\n\t\t\treturn false;\n\t\t}\n\t\t// Check if value contains an asterisk\n\t\tconst asteriskIndex = value.indexOf(\"*\");\n\t\tif (asteriskIndex !== -1) {\n\t\t\t// If asterisk is found, ensure it's at the start, end, or both\n\t\t\tif (asteriskIndex > 0 && asteriskIndex < value.length - 1) {\n\t\t\t\t// Asterisk is not at start or end\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic isValidComparator(comparator: any): boolean {\n\t\t// Check if comparator is a number\n\t\treturn typeof Object.values(comparator)[0] === \"number\";\n\t}\n\n\tpublic isValidOptions(options: any, allIDs: Set<string>): boolean {\n\t\t// Check if OPTIONS is an object\n\t\tif (!(options && typeof options === \"object\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if COLUMNS property exists and is an array\n\t\tif (\n\t\t\t!options.COLUMNS ||\n\t\t\t!Array.isArray(options.COLUMNS) ||\n\t\t\toptions.COLUMNS.length === 0 ||\n\t\t\tObject.keys(options).length > 2\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if each column is a valid string\n\t\tfor (const column of options.COLUMNS) {\n\t\t\tif (typeof column !== \"string\" || !this.isValidColumn(column, allIDs)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if ORDER property exists and is a valid string\n\t\tif (options.ORDER) {\n\t\t\tif (typeof options.ORDER !== \"string\" || !this.isValidColumn(options.ORDER, allIDs)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic isValidColumn(column: string, allIDs: Set<string>): boolean {\n\t\t// Check if column follows the specified format\n\t\tconst columnParts = column.split(\"_\");\n\t\tif (columnParts.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [prefix, suffix] = columnParts;\n\n\t\t// Check if the prefix (id) exists in the allIDs set\n\t\tif (!allIDs.has(prefix)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if the suffix is a valid field\n\t\tconst validSuffixes = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\t\tif (!validSuffixes.includes(suffix)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic traverseWhereClause(where: any, allIDs: Set<string>): string {\n\t\tconst operator: string = Object.keys(where)[0];\n\t\tconst operand: any = where[operator];\n\t\tlet condition: string;\n\n\t\tif (operator === \"AND\") {\n\t\t\t// Process each operand recursively\n\t\t\tconst subConditions: string[] = [];\n\t\t\tfor (const conditionObj of operand) {\n\t\t\t\tconst subCondition = this.traverseWhereClause(conditionObj, allIDs);\n\t\t\t\tsubConditions.push(subCondition);\n\t\t\t}\n\t\t\t// Combine all conditions within the AND clause using &&\n\t\t\tcondition = subConditions.join(\" && \");\n\t\t\t// Wrap the combined condition within parentheses\n\t\t\tcondition = `(${condition})`;\n\t\t} else if (operator === \"OR\") {\n\t\t\t// Process each operand recursively\n\t\t\tconst subConditions: string[] = [];\n\t\t\tfor (const conditionObj of operand) {\n\t\t\t\tconst subCondition = this.traverseWhereClause(conditionObj, allIDs);\n\t\t\t\tsubConditions.push(subCondition);\n\t\t\t}\n\t\t\t// Combine all conditions within the OR clause using ||\n\t\t\tcondition = subConditions.join(\" || \");\n\t\t\t// Wrap the combined condition within parentheses\n\t\t\tcondition = `(${condition})`;\n\t\t} else if (operator === \"NOT\") {\n\t\t\t// Negate the condition following the NOT keyword\n\t\t\tconst subCondition = this.traverseWhereClause(operand, allIDs);\n\t\t\tcondition = `!(${subCondition})`;\n\t\t} else {\n\t\t\t// Handle leaf nodes and other operators like LT, GT, EQ, IS\n\t\t\tcondition = this.buildConditionString(where, allIDs);\n\t\t}\n\n\t\treturn condition;\n\t}\n\n\tpublic buildConditionString(filter: any, allIDs: Set<string>): string {\n\t\tconst operator: string = Object.keys(filter)[0];\n\t\tconst operand: any = filter[operator];\n\n\t\t// Extract the key and value from the operand\n\t\tconst [id, suffix] = Object.keys(operand)[0].split(\"_\");\n\t\tconst value: string | number = operand[`${id}_${suffix}`];\n\n\t\t// Check if the ID prefix is valid\n\t\tif (!allIDs.has(id)) {\n\t\t\tthrow new Error(`Invalid ID prefix ${id}`);\n\t\t}\n\t\t// CITATION OF THIS WILDCARD REGEX :https://stackoverflow.com/questions/52143451/javascript-filter-with-wildcard\n\t\tif (operator === \"IS\" && typeof value === \"string\" && value.includes(\"*\")) {\n\t\t\tconst a = value.replace(/\\*/g, \".*\"); // Replace * with .* in the value\n\t\t\treturn `new RegExp('^${a}$').test(${suffix})`; // Construct regex test condition\n\t\t}\n\n\t\t// Build the condition string based on the operator\n\t\tswitch (operator) {\n\t\t\tcase \"IS\":\n\t\t\t\treturn `${suffix} === \"${value}\"`;\n\t\t\tcase \"GT\":\n\t\t\t\treturn `${suffix} > ${value}`;\n\t\t\tcase \"LT\":\n\t\t\t\treturn `${suffix} < ${value}`;\n\t\t\tcase \"EQ\":\n\t\t\t\treturn `${suffix} === ${value}`;\n\t\t\tdefault:\n\t\t\t\tthrow new InsightError(`Invalid operator ${operator}`);\n\t\t}\n\t}\n\n\tpublic async getMatchingItems(id: string, condition: string): Promise<any[]> {\n\t\ttry {\n\t\t\t// Read the contents of the id.json file\n\t\t\tconst data = await fs.promises.readFile(`data/${id}.json`, \"utf-8\");\n\t\t\tconst jsonData = JSON.parse(data);\n\n\t\t\tconst matchingItems: any[] = [];\n\n\t\t\t// Iterate through each object in the JSON data\n\t\t\tfor (const item of jsonData) {\n\t\t\t\t// Evaluate the condition for each item\n\t\t\t\tif (this.evaluateCondition(item, condition)) {\n\t\t\t\t\tif (!Object.values(item).some((value) => value === undefined)) {\n\t\t\t\t\t\tmatchingItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn matchingItems;\n\t\t} catch (error) {\n\t\t\tthrow new InsightError(\"Invalid operator\");\n\t\t}\n\t}\n\n\tpublic preprocessCondition(item: any, condition: string): string {\n\t\t// Define an array of field names to be replaced\n\t\tconst fieldNames = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\n\t\t// Replace each field name with \"item.fieldName\"\n\t\tfor (const fieldName of fieldNames) {\n\t\t\t// CITATION: regex provided by chatGPT\n\t\t\tconst regex = new RegExp(`\\\\b${fieldName}\\\\b`, \"g\");\n\t\t\tcondition = condition.replace(regex, `item.${fieldName}`);\n\t\t}\n\t\treturn condition;\n\t}\n\n\tpublic evaluateCondition(item: any, condition: string): boolean {\n\t\ttry {\n\t\t\t// Preprocess the condition to replace field names with \"item.fieldName\"\n\t\t\tcondition = this.preprocessCondition(item, condition);\n\t\t\t// Use Function constructor to create a function that evaluates the condition\n\t\t\tconst evaluator = new Function(\"item\", `return ${condition}`);\n\n\t\t\t// Call the dynamically created function with the item and get the result\n\t\t\tconst result = evaluator(item);\n\t\t\t// Convert the result to a boolean value\n\t\t\treturn !!result; // Use double negation to convert to boolean\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error evaluating condition:\", error);\n\t\t\treturn false; // Return false if there's an error evaluating the condition\n\t\t}\n\t}\n\n\tpublic traverseOptions(items: any[], queryOptions: any): any[] {\n\t\tif (!queryOptions.COLUMNS) {\n\t\t\tthrow new Error(\"COLUMNS property is required in OPTIONS.\");\n\t\t}\n\n\t\tconst requestedFields: string[] = queryOptions.COLUMNS;\n\n\t\t// Filter out items to include only the requested fields\n\t\tconst filteredItems = items.map((item: any) => {\n\t\t\tconst filteredItem: any = {};\n\t\t\trequestedFields.forEach((field: string) => {\n\t\t\t\tconst actualField = field.split(\"_\")[1]; // Extract the actual field name\n\t\t\t\tfilteredItem[field] = item[actualField];\n\t\t\t});\n\t\t\treturn filteredItem;\n\t\t});\n\t\tif (queryOptions.ORDER) {\n\t\t\tconst orderField: string = queryOptions.ORDER;\n\t\t\tfilteredItems.sort((a: any, b: any) => {\n\t\t\t\tif (a[orderField] < b[orderField]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a[orderField] > b[orderField]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn filteredItems;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f056b3f6edad792081b4664746297b84c498d249","contentHash":"38557a88690542fc76296a7d832051cc25509604238ac0cfafcc7f42fa25cb0c"},"/Users/rishishukla/Desktop/project_team067/src/controller/Sectionsdatahelper.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/Sectionsdatahelper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":55}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":37}},"9":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":78}},"11":{"start":{"line":20,"column":20},"end":{"line":20,"column":41}},"12":{"start":{"line":21,"column":31},"end":{"line":21,"column":77}},"13":{"start":{"line":22,"column":30},"end":{"line":22,"column":62}},"14":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":115}},"16":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":106}},"18":{"start":{"line":29,"column":27},"end":{"line":29,"column":32}},"19":{"start":{"line":30,"column":29},"end":{"line":55,"column":10}},"20":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"21":{"start":{"line":32,"column":16},"end":{"line":32,"column":95}},"22":{"start":{"line":34,"column":30},"end":{"line":34,"column":59}},"23":{"start":{"line":35,"column":30},"end":{"line":35,"column":81}},"24":{"start":{"line":36,"column":12},"end":{"line":54,"column":13}},"25":{"start":{"line":37,"column":34},"end":{"line":37,"column":63}},"26":{"start":{"line":38,"column":16},"end":{"line":45,"column":17}},"27":{"start":{"line":39,"column":20},"end":{"line":44,"column":21}},"28":{"start":{"line":40,"column":24},"end":{"line":43,"column":25}},"29":{"start":{"line":41,"column":28},"end":{"line":41,"column":48}},"30":{"start":{"line":42,"column":28},"end":{"line":42,"column":34}},"31":{"start":{"line":48,"column":16},"end":{"line":53,"column":17}},"32":{"start":{"line":49,"column":20},"end":{"line":49,"column":41}},"33":{"start":{"line":52,"column":20},"end":{"line":52,"column":122}},"34":{"start":{"line":56,"column":8},"end":{"line":56,"column":40}},"35":{"start":{"line":57,"column":8},"end":{"line":63,"column":9}},"36":{"start":{"line":58,"column":12},"end":{"line":58,"column":116}},"37":{"start":{"line":61,"column":31},"end":{"line":61,"column":63}},"38":{"start":{"line":62,"column":12},"end":{"line":62,"column":60}},"39":{"start":{"line":64,"column":8},"end":{"line":64,"column":33}},"40":{"start":{"line":65,"column":8},"end":{"line":65,"column":48}},"41":{"start":{"line":68,"column":8},"end":{"line":71,"column":42}},"42":{"start":{"line":74,"column":8},"end":{"line":83,"column":47}},"43":{"start":{"line":86,"column":30},"end":{"line":90,"column":9}},"44":{"start":{"line":91,"column":8},"end":{"line":91,"column":44}},"45":{"start":{"line":92,"column":27},"end":{"line":92,"column":64}},"46":{"start":{"line":93,"column":25},"end":{"line":93,"column":42}},"47":{"start":{"line":94,"column":8},"end":{"line":103,"column":9}},"48":{"start":{"line":95,"column":37},"end":{"line":95,"column":102}},"49":{"start":{"line":95,"column":96},"end":{"line":95,"column":101}},"50":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"51":{"start":{"line":97,"column":16},"end":{"line":97,"column":64}},"52":{"start":{"line":99,"column":12},"end":{"line":99,"column":78}},"53":{"start":{"line":102,"column":12},"end":{"line":102,"column":92}},"54":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"55":{"start":{"line":107,"column":12},"end":{"line":107,"column":24}},"56":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"57":{"start":{"line":112,"column":12},"end":{"line":112,"column":24}},"58":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"59":{"start":{"line":117,"column":12},"end":{"line":117,"column":24}},"60":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"61":{"start":{"line":120,"column":12},"end":{"line":120,"column":24}},"62":{"start":{"line":124,"column":20},"end":{"line":124,"column":41}},"63":{"start":{"line":125,"column":31},"end":{"line":125,"column":77}},"64":{"start":{"line":126,"column":30},"end":{"line":126,"column":62}},"65":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"66":{"start":{"line":128,"column":12},"end":{"line":128,"column":98}},"67":{"start":{"line":130,"column":29},"end":{"line":130,"column":31}},"68":{"start":{"line":131,"column":29},"end":{"line":151,"column":10}},"69":{"start":{"line":132,"column":30},"end":{"line":132,"column":59}},"70":{"start":{"line":133,"column":30},"end":{"line":133,"column":61}},"71":{"start":{"line":134,"column":12},"end":{"line":150,"column":13}},"72":{"start":{"line":135,"column":32},"end":{"line":135,"column":55}},"73":{"start":{"line":136,"column":16},"end":{"line":144,"column":17}},"74":{"start":{"line":137,"column":20},"end":{"line":143,"column":21}},"75":{"start":{"line":138,"column":24},"end":{"line":140,"column":25}},"76":{"start":{"line":139,"column":28},"end":{"line":139,"column":54}},"77":{"start":{"line":141,"column":43},"end":{"line":141,"column":82}},"78":{"start":{"line":142,"column":24},"end":{"line":142,"column":54}},"79":{"start":{"line":147,"column":16},"end":{"line":149,"column":17}},"80":{"start":{"line":148,"column":20},"end":{"line":148,"column":120}},"81":{"start":{"line":152,"column":8},"end":{"line":152,"column":40}},"82":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"83":{"start":{"line":154,"column":12},"end":{"line":154,"column":114}},"84":{"start":{"line":156,"column":8},"end":{"line":156,"column":28}},"85":{"start":{"line":159,"column":8},"end":{"line":159,"column":242}},"86":{"start":{"line":162,"column":0},"end":{"line":162,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":28},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":47},"end":{"line":66,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":66},"end":{"line":30,"column":67}},"loc":{"start":{"line":30,"column":86},"end":{"line":55,"column":9}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":38},"end":{"line":72,"column":5}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":44},"end":{"line":84,"column":5}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":47},"end":{"line":104,"column":5}},"line":85},"7":{"name":"(anonymous_7)","decl":{"start":{"line":95,"column":90},"end":{"line":95,"column":91}},"loc":{"start":{"line":95,"column":96},"end":{"line":95,"column":101}},"line":95},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":24},"end":{"line":109,"column":5}},"line":105},"9":{"name":"(anonymous_9)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":30},"end":{"line":114,"column":5}},"line":110},"10":{"name":"(anonymous_10)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":20},"end":{"line":122,"column":5}},"line":115},"11":{"name":"(anonymous_11)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":32},"end":{"line":157,"column":5}},"line":123},"12":{"name":"(anonymous_12)","decl":{"start":{"line":131,"column":66},"end":{"line":131,"column":67}},"loc":{"start":{"line":131,"column":86},"end":{"line":151,"column":9}},"line":131},"13":{"name":"(anonymous_13)","decl":{"start":{"line":158,"column":4},"end":{"line":158,"column":5}},"loc":{"start":{"line":158,"column":39},"end":{"line":160,"column":5}},"line":158}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"4":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"5":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"6":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{"line":31,"column":12},"end":{"line":33,"column":13}}],"line":31},"7":{"loc":{"start":{"line":38,"column":16},"end":{"line":45,"column":17}},"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":45,"column":17}},{"start":{"line":38,"column":16},"end":{"line":45,"column":17}}],"line":38},"8":{"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":102}},"type":"binary-expr","locations":[{"start":{"line":38,"column":20},"end":{"line":38,"column":36}},{"start":{"line":38,"column":40},"end":{"line":38,"column":71}},{"start":{"line":38,"column":75},"end":{"line":38,"column":102}}],"line":38},"9":{"loc":{"start":{"line":40,"column":24},"end":{"line":43,"column":25}},"type":"if","locations":[{"start":{"line":40,"column":24},"end":{"line":43,"column":25}},{"start":{"line":40,"column":24},"end":{"line":43,"column":25}}],"line":40},"10":{"loc":{"start":{"line":48,"column":16},"end":{"line":53,"column":17}},"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":53,"column":17}},{"start":{"line":48,"column":16},"end":{"line":53,"column":17}}],"line":48},"11":{"loc":{"start":{"line":57,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":63,"column":9}},{"start":{"line":57,"column":8},"end":{"line":63,"column":9}}],"line":57},"12":{"loc":{"start":{"line":68,"column":16},"end":{"line":71,"column":40}},"type":"binary-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":36}},{"start":{"line":69,"column":12},"end":{"line":69,"column":42}},{"start":{"line":70,"column":12},"end":{"line":70,"column":36}},{"start":{"line":71,"column":12},"end":{"line":71,"column":40}}],"line":68},"13":{"loc":{"start":{"line":74,"column":16},"end":{"line":83,"column":45}},"type":"binary-expr","locations":[{"start":{"line":74,"column":16},"end":{"line":74,"column":46}},{"start":{"line":75,"column":12},"end":{"line":75,"column":46}},{"start":{"line":76,"column":12},"end":{"line":76,"column":45}},{"start":{"line":77,"column":12},"end":{"line":77,"column":49}},{"start":{"line":78,"column":12},"end":{"line":78,"column":47}},{"start":{"line":79,"column":12},"end":{"line":79,"column":44}},{"start":{"line":80,"column":12},"end":{"line":80,"column":43}},{"start":{"line":81,"column":12},"end":{"line":81,"column":44}},{"start":{"line":82,"column":12},"end":{"line":82,"column":44}},{"start":{"line":83,"column":12},"end":{"line":83,"column":45}}],"line":74},"14":{"loc":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},{"start":{"line":96,"column":12},"end":{"line":98,"column":13}}],"line":96},"15":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"16":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"17":{"loc":{"start":{"line":111,"column":12},"end":{"line":111,"column":46}},"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":28}},{"start":{"line":111,"column":32},"end":{"line":111,"column":46}}],"line":111},"18":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"19":{"loc":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},{"start":{"line":119,"column":8},"end":{"line":121,"column":9}}],"line":119},"20":{"loc":{"start":{"line":119,"column":12},"end":{"line":119,"column":54}},"type":"binary-expr","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":28}},{"start":{"line":119,"column":32},"end":{"line":119,"column":54}}],"line":119},"21":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"22":{"loc":{"start":{"line":136,"column":16},"end":{"line":144,"column":17}},"type":"if","locations":[{"start":{"line":136,"column":16},"end":{"line":144,"column":17}},{"start":{"line":136,"column":16},"end":{"line":144,"column":17}}],"line":136},"23":{"loc":{"start":{"line":136,"column":20},"end":{"line":136,"column":102}},"type":"binary-expr","locations":[{"start":{"line":136,"column":20},"end":{"line":136,"column":36}},{"start":{"line":136,"column":40},"end":{"line":136,"column":71}},{"start":{"line":136,"column":75},"end":{"line":136,"column":102}}],"line":136},"24":{"loc":{"start":{"line":138,"column":24},"end":{"line":140,"column":25}},"type":"if","locations":[{"start":{"line":138,"column":24},"end":{"line":140,"column":25}},{"start":{"line":138,"column":24},"end":{"line":140,"column":25}}],"line":138},"25":{"loc":{"start":{"line":147,"column":16},"end":{"line":149,"column":17}},"type":"if","locations":[{"start":{"line":147,"column":16},"end":{"line":149,"column":17}},{"start":{"line":147,"column":16},"end":{"line":149,"column":17}}],"line":147},"26":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{"line":153,"column":8},"end":{"line":155,"column":9}}],"line":153}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":33,"9":27,"10":8,"11":19,"12":19,"13":19,"14":19,"15":0,"16":19,"17":1,"18":18,"19":18,"20":6020,"21":1,"22":6019,"23":6019,"24":6019,"25":6019,"26":6001,"27":3645,"28":3645,"29":3645,"30":3645,"31":18,"32":18,"33":0,"34":18,"35":17,"36":2,"37":15,"38":15,"39":15,"40":15,"41":27,"42":3645,"43":15,"44":15,"45":15,"46":15,"47":15,"48":15,"49":10,"50":15,"51":10,"52":15,"53":0,"54":21,"55":0,"56":23,"57":2,"58":27,"59":2,"60":25,"61":2,"62":15,"63":15,"64":15,"65":15,"66":0,"67":15,"68":15,"69":6015,"70":6015,"71":6015,"72":6015,"73":6000,"74":3645,"75":68910,"76":25223,"77":68910,"78":68910,"79":15,"80":0,"81":15,"82":15,"83":0,"84":15,"85":68910,"86":1},"f":{"0":2,"1":33,"2":27,"3":6020,"4":27,"5":3645,"6":15,"7":10,"8":21,"9":23,"10":27,"11":15,"12":6015,"13":68910},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[8,19],"4":[0,19],"5":[1,18],"6":[1,6019],"7":[3645,2356],"8":[6001,6001,6001],"9":[3645,0],"10":[18,0],"11":[2,15],"12":[27,23,21,21],"13":[3645,3645,3645,3645,3645,3645,3645,3645,3645,3645],"14":[10,5],"15":[0,21],"16":[2,21],"17":[23,23],"18":[2,25],"19":[2,23],"20":[25,24],"21":[0,15],"22":[3645,2355],"23":[6000,6000,6000],"24":[25223,43687],"25":[0,15],"26":[0,15]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/Sectionsdatahelper.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/Sectionsdatahelper.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDataset, InsightDatasetKind, InsightError} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport {Section} from \"./Section\";\nimport fs from \"fs-extra\";\n\nexport class SectionsDatasetHelper {\n\tprivate readonly datasetIds: string[];\n\tconstructor(datasetIds: string[]) {\n\t\tthis.datasetIds = datasetIds;\n\t}\n\n\tpublic async addDatasetSection(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tif (this.isEntryInValid(id, content, kind)) {\n\t\t\treturn Promise.reject(new InsightError(\"ERROR\"));\n\t\t}\n\t\t// Step 1: Decode and unzip the base64 content\n\t\tconst zip = new JSZip();\n\t\tconst decodedContent = await zip.loadAsync(content, {base64: true});\n\t\tconst coursesFolder = decodedContent.folder(\"courses\");\n\t\tif (coursesFolder === null) {\n\t\t\treturn Promise.reject(new InsightError(\"courses/ folder not found in the zip file.\"));\n\t\t}\n\t\tif (Object.keys(coursesFolder.files)[0] !== \"courses/\") {\n\t\t\treturn Promise.reject(new InsightError(\"courses/ named folder doest exist\"));\n\t\t}\n\t\tlet validDataset = false;\n\t\tconst filePromises = Object.keys(coursesFolder.files).map(async (fileName) => {\n\t\t\tif (!fileName.startsWith(\"courses/\")) {\n\t\t\t\treturn Promise.reject(new InsightError(\"Invalid file name:\"));\n\t\t\t}\n\t\t\tconst fileEntry = coursesFolder.files[fileName];\n\t\t\tlet fileContent = await coursesFolder.files[fileName].async(\"string\");\n\t\t\ttry {\n\t\t\t\tconst jsonData1 = await JSON.parse(fileContent);\n\t\t\t\tif (jsonData1.result && Array.isArray(jsonData1.result) && jsonData1.result.length > 0) {\n\t\t\t\t\tfor (const section of jsonData1.result) {\n\t\t\t\t\t\tif (this.checkValidSectionParameterKind(section)) {\n\t\t\t\t\t\t\tvalidDataset = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (fileEntry.dir) {\n\t\t\t\t\tvalidDataset = false;\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new InsightError(\"Invalid dataset:is not a valid JSON file.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tawait Promise.all(filePromises);\n\t\tif (!validDataset) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid dataset:we dont have valid sections\"));\n\t\t} else {\n\t\t\tlet sectionArray: any[] = await this.addFiler(id, content);\n\t\t\tawait this.writeDatasetToFile(id, sectionArray);\n\t\t}\n\t\tthis.datasetIds.push(id);\n\t\treturn Promise.resolve(this.datasetIds);\n\t}\n\n\tprivate isEntryInValid(id: string, content: string, kind: InsightDatasetKind) {\n\t\treturn (\n\t\t\tthis.isInvalidID(id) ||\n\t\t\tthis.isInValidContent(content) ||\n\t\t\tthis.isInValidKind(kind) ||\n\t\t\tthis.datasetIds.includes(id)\n\t\t);\n\t}\n\n\n\tprivate checkValidSectionParameterKind(section: any) {\n\t\treturn (\n\t\t\ttypeof section.id === \"number\" &&\n\t\t\ttypeof section.Course === \"string\" &&\n\t\t\ttypeof section.Title === \"string\" &&\n\t\t\ttypeof section.Professor === \"string\" &&\n\t\t\ttypeof section.Subject === \"string\" &&\n\t\t\ttypeof section.Year === \"string\" &&\n\t\t\ttypeof section.Avg === \"number\" &&\n\t\t\ttypeof section.Pass === \"number\" &&\n\t\t\ttypeof section.Fail === \"number\" &&\n\t\t\ttypeof section.Audit === \"number\"\n\t\t);\n\t}\n\n\tprivate async writeDatasetToFile(id: string, sectionArray: any[]): Promise<void> {\n\t\tconst datasetObject: InsightDataset = {\n\t\t\tid: id,\n\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\tnumRows: sectionArray.length,\n\t\t};\n\n\t\tsectionArray.unshift(datasetObject);\n\n\t\tconst jsonString = JSON.stringify(sectionArray, null, 2);\n\t\tconst filePath = `data/${id}.json`;\n\n\t\ttry {\n\t\t\t// Check if the 'data' folder exists, create it if not\n\t\t\tconst dataFolderExists = await fs.promises.stat(\"data\").catch(() => false);\n\t\t\tif (!dataFolderExists) {\n\t\t\t\tawait fs.promises.mkdir(\"data\");\n\t\t\t}\n\t\t\tawait fs.promises.writeFile(filePath, jsonString);\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new InsightError(\"Error creating file\"));\n\t\t}\n\t}\n\n\tprivate isInValidKind(kind: InsightDatasetKind) {\n\t\tif (kind !== InsightDatasetKind.Sections) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate isInValidContent(content: string) {\n\t\tif (content === null || content === \"\") {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate isInvalidID(id: string) {\n\t\tif (!id) {\n\t\t\treturn true;\n\t\t}\n\t\tif (id.includes(\"_\") || id.trim().length === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate async addFiler(id: string, content: string): Promise<Section[]> {\n\t\t// Decode and unzip the base64 content\n\t\tconst zip = new JSZip();\n\t\tconst decodedContent = await zip.loadAsync(content, {base64: true});\n\t\tconst coursesFolder = decodedContent.folder(\"courses\");\n\t\tif (coursesFolder === null) {\n\t\t\tthrow new InsightError(\"courses/ folder not found in the zip file.\");\n\t\t}\n\t\tconst sectionArray: Section[] = [];\n\t\tconst filePromises = Object.keys(coursesFolder.files).map(async (fileName) => {\n\t\t\tconst fileEntry = coursesFolder.files[fileName];\n\t\t\tlet fileContent = await fileEntry.async(\"string\");\n\t\t\ttry {\n\t\t\t\tlet jsonData1 = JSON.parse(fileContent);\n\t\t\t\tif (jsonData1.result && Array.isArray(jsonData1.result) && jsonData1.result.length > 0) {\n\t\t\t\t\tfor (const sectionData of jsonData1.result) {\n\t\t\t\t\t\tif (sectionData.Section === \"overall\") {\n\t\t\t\t\t\t\tsectionData.Year = \"1900\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newSection = this.createSectionFromData(sectionData);\n\t\t\t\t\t\tsectionArray.push(newSection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!fileEntry.dir) {\n\t\t\t\t\treturn Promise.reject(new InsightError(\"Invalid dataset: not a valid JSON file.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(filePromises);\n\n\t\tif (sectionArray.length === 0) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid dataset: no valid sections found.\"));\n\t\t}\n\n\t\treturn sectionArray;\n\t}\n\n\tprivate createSectionFromData(sectionData: any): Section {\n\t\t// Add logic here to handle default values or validation as needed\n\t\treturn new Section(\n\t\t\tString(sectionData.id),\n\t\t\tsectionData.Course,\n\t\t\tsectionData.Title,\n\t\t\tsectionData.Professor,\n\t\t\tsectionData.Subject,\n\t\t\tNumber(sectionData.Year),\n\t\t\tsectionData.Avg,\n\t\t\tsectionData.Pass,\n\t\t\tsectionData.Fail,\n\t\t\tsectionData.Audit\n\t\t);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c656d31500cb2e59a0bad7a1e1095c40e0ab760","contentHash":"abc20ad51b4b634e1f9f7b3f1ce0ecfa376aeebc527def1976f8aad0b4136fb7"},"/Users/rishishukla/Desktop/project_team067/src/controller/Section.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":23}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":26}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":31}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":25}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":25}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":24}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":25}},"20":{"start":{"line":52,"column":8},"end":{"line":52,"column":25}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":26}},"22":{"start":{"line":58,"column":0},"end":{"line":58,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":126},"end":{"line":26,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":14},"end":{"line":29,"column":5}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":15},"end":{"line":35,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":20},"end":{"line":38,"column":5}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":14},"end":{"line":41,"column":5}},"line":39},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":14},"end":{"line":44,"column":5}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":13},"end":{"line":47,"column":5}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":14},"end":{"line":50,"column":5}},"line":48},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":14},"end":{"line":53,"column":5}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":15},"end":{"line":56,"column":5}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":16},"end":{"line":15,"column":25}},"type":"default-arg","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":25}}],"line":15},"1":{"loc":{"start":{"line":15,"column":27},"end":{"line":15,"column":34}},"type":"default-arg","locations":[{"start":{"line":15,"column":32},"end":{"line":15,"column":34}}],"line":15},"2":{"loc":{"start":{"line":15,"column":36},"end":{"line":15,"column":46}},"type":"default-arg","locations":[{"start":{"line":15,"column":44},"end":{"line":15,"column":46}}],"line":15},"3":{"loc":{"start":{"line":15,"column":48},"end":{"line":15,"column":63}},"type":"default-arg","locations":[{"start":{"line":15,"column":61},"end":{"line":15,"column":63}}],"line":15},"4":{"loc":{"start":{"line":15,"column":65},"end":{"line":15,"column":74}},"type":"default-arg","locations":[{"start":{"line":15,"column":72},"end":{"line":15,"column":74}}],"line":15},"5":{"loc":{"start":{"line":15,"column":76},"end":{"line":15,"column":84}},"type":"default-arg","locations":[{"start":{"line":15,"column":83},"end":{"line":15,"column":84}}],"line":15},"6":{"loc":{"start":{"line":15,"column":86},"end":{"line":15,"column":93}},"type":"default-arg","locations":[{"start":{"line":15,"column":92},"end":{"line":15,"column":93}}],"line":15},"7":{"loc":{"start":{"line":15,"column":95},"end":{"line":15,"column":103}},"type":"default-arg","locations":[{"start":{"line":15,"column":102},"end":{"line":15,"column":103}}],"line":15},"8":{"loc":{"start":{"line":15,"column":105},"end":{"line":15,"column":113}},"type":"default-arg","locations":[{"start":{"line":15,"column":112},"end":{"line":15,"column":113}}],"line":15},"9":{"loc":{"start":{"line":15,"column":115},"end":{"line":15,"column":124}},"type":"default-arg","locations":[{"start":{"line":15,"column":123},"end":{"line":15,"column":124}}],"line":15}},"s":{"0":1,"1":1,"2":68910,"3":68910,"4":68910,"5":68910,"6":68910,"7":68910,"8":68910,"9":68910,"10":68910,"11":68910,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"f":{"0":68910,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[0],"7":[0],"8":[0],"9":[0]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/Section.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/Section.ts"],"names":[],"mappings":";;;AAAA,MAAa,OAAO;IACF,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAE/B,YACC,OAAe,EAAE,EACjB,KAAa,EAAE,EACf,QAAgB,EAAE,EAClB,aAAqB,EAAE,EACvB,OAAe,EAAE,EACjB,OAAe,CAAC,EAChB,MAAc,CAAC,EACf,OAAe,CAAC,EAChB,OAAe,CAAC,EAChB,QAAgB,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AA5ED,0BA4EC","sourcesContent":["export class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(\n\t\tuuid: string = \"\",\n\t\tid: string = \"\",\n\t\ttitle: string = \"\",\n\t\tinstructor: string = \"\",\n\t\tdept: string = \"\",\n\t\tyear: number = 0,\n\t\tavg: number = 0,\n\t\tpass: number = 0,\n\t\tfail: number = 0,\n\t\taudit: number = 0\n\t) {\n\t\tthis.uuid = uuid;\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\t// Getters\n\tpublic getUuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\tpublic getDept(): string {\n\t\treturn this.dept;\n\t}\n\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3414e25a99de1291ea4d612943a45695d2fe95e8","contentHash":"5cdd5e7af4fa02593384b0b6dfe78e56676fc55347646b6db5f77a15f00951c7"},"/Users/rishishukla/Desktop/project_team067/src/controller/RoomDatasetHelper.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/RoomDatasetHelper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":34}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":55}},"8":{"start":{"line":11,"column":29},"end":{"line":11,"column":60}},"9":{"start":{"line":12,"column":21},"end":{"line":12,"column":44}},"10":{"start":{"line":13,"column":20},"end":{"line":13,"column":42}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":37}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":95}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":61}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":62}},"15":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":78}},"17":{"start":{"line":29,"column":8},"end":{"line":59,"column":9}},"18":{"start":{"line":30,"column":24},"end":{"line":30,"column":45}},"19":{"start":{"line":31,"column":12},"end":{"line":31,"column":57}},"20":{"start":{"line":32,"column":35},"end":{"line":32,"column":81}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":57}},"22":{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},"23":{"start":{"line":35,"column":25},"end":{"line":35,"column":78}},"24":{"start":{"line":36,"column":34},"end":{"line":40,"column":13}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":40}},"26":{"start":{"line":42,"column":31},"end":{"line":42,"column":60}},"27":{"start":{"line":43,"column":29},"end":{"line":43,"column":46}},"28":{"start":{"line":44,"column":12},"end":{"line":54,"column":13}},"29":{"start":{"line":45,"column":41},"end":{"line":45,"column":84}},"30":{"start":{"line":46,"column":16},"end":{"line":48,"column":17}},"31":{"start":{"line":47,"column":20},"end":{"line":47,"column":59}},"32":{"start":{"line":49,"column":16},"end":{"line":49,"column":73}},"33":{"start":{"line":50,"column":16},"end":{"line":50,"column":62}},"34":{"start":{"line":53,"column":16},"end":{"line":53,"column":75}},"35":{"start":{"line":55,"column":12},"end":{"line":55,"column":52}},"36":{"start":{"line":58,"column":12},"end":{"line":58,"column":71}},"37":{"start":{"line":62,"column":8},"end":{"line":65,"column":42}},"38":{"start":{"line":68,"column":8},"end":{"line":79,"column":9}},"39":{"start":{"line":69,"column":24},"end":{"line":69,"column":45}},"40":{"start":{"line":70,"column":35},"end":{"line":70,"column":81}},"41":{"start":{"line":71,"column":12},"end":{"line":71,"column":71}},"42":{"start":{"line":72,"column":30},"end":{"line":72,"column":62}},"43":{"start":{"line":73,"column":12},"end":{"line":75,"column":13}},"44":{"start":{"line":74,"column":16},"end":{"line":74,"column":125}},"45":{"start":{"line":78,"column":12},"end":{"line":78,"column":108}},"46":{"start":{"line":82,"column":26},"end":{"line":82,"column":58}},"47":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"48":{"start":{"line":84,"column":12},"end":{"line":84,"column":121}},"49":{"start":{"line":86,"column":33},"end":{"line":86,"column":62}},"50":{"start":{"line":87,"column":25},"end":{"line":87,"column":62}},"51":{"start":{"line":88,"column":30},"end":{"line":88,"column":72}},"52":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"53":{"start":{"line":90,"column":12},"end":{"line":90,"column":116}},"54":{"start":{"line":92,"column":30},"end":{"line":92,"column":80}},"55":{"start":{"line":93,"column":29},"end":{"line":93,"column":34}},"56":{"start":{"line":94,"column":25},"end":{"line":101,"column":10}},"57":{"start":{"line":95,"column":12},"end":{"line":100,"column":13}},"58":{"start":{"line":96,"column":28},"end":{"line":96,"column":114}},"59":{"start":{"line":97,"column":16},"end":{"line":97,"column":38}},"60":{"start":{"line":102,"column":8},"end":{"line":102,"column":36}},"61":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"62":{"start":{"line":104,"column":12},"end":{"line":104,"column":128}},"63":{"start":{"line":107,"column":12},"end":{"line":107,"column":37}},"64":{"start":{"line":111,"column":0},"end":{"line":111,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":28},"end":{"line":24,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":40},"end":{"line":60,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":38},"end":{"line":66,"column":5}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":44},"end":{"line":80,"column":5}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":44},"end":{"line":109,"column":5}},"line":81},"6":{"name":"(anonymous_6)","decl":{"start":{"line":94,"column":43},"end":{"line":94,"column":44}},"loc":{"start":{"line":94,"column":67},"end":{"line":101,"column":9}},"line":94}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"4":{"loc":{"start":{"line":46,"column":16},"end":{"line":48,"column":17}},"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":48,"column":17}},{"start":{"line":46,"column":16},"end":{"line":48,"column":17}}],"line":46},"5":{"loc":{"start":{"line":62,"column":16},"end":{"line":65,"column":40}},"type":"binary-expr","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":47}},{"start":{"line":63,"column":12},"end":{"line":63,"column":53}},{"start":{"line":64,"column":12},"end":{"line":64,"column":47}},{"start":{"line":65,"column":12},"end":{"line":65,"column":40}}],"line":62},"6":{"loc":{"start":{"line":73,"column":12},"end":{"line":75,"column":13}},"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":75,"column":13}},{"start":{"line":73,"column":12},"end":{"line":75,"column":13}}],"line":73},"7":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"8":{"loc":{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":91,"column":9}},{"start":{"line":89,"column":8},"end":{"line":91,"column":9}}],"line":89},"9":{"loc":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},{"start":{"line":103,"column":8},"end":{"line":108,"column":9}}],"line":103}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":33,"12":33,"13":33,"14":33,"15":4,"16":2,"17":2,"18":2,"19":2,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0,"35":1,"36":1,"37":4,"38":2,"39":2,"40":2,"41":2,"42":1,"43":1,"44":0,"45":1,"46":1,"47":1,"48":0,"49":1,"50":1,"51":1,"52":1,"53":0,"54":1,"55":1,"56":1,"57":74,"58":74,"59":44,"60":1,"61":1,"62":0,"63":1,"64":1},"f":{"0":2,"1":33,"2":4,"3":4,"4":2,"5":1,"6":74},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[2,2],"4":[1,0],"5":[4,2,2,2],"6":[0,1],"7":[0,1],"8":[0,1],"9":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/RoomDatasetHelper.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/RoomDatasetHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport {InsightDataset, InsightDatasetKind, InsightError} from \"./IInsightFacade\";\nimport {parse} from \"parse5\";\nimport fs from \"fs-extra\";\nimport {CustomRoomsDatasetHelper} from \"./Roomdatasethelper2\";\nimport {ValidationUtils} from \"./validation\";\nimport {GeolocationFetcher} from \"./indexhtml\";\n\nexport class RoomsDatasetHelper {\n\tpublic readonly datasetIds: string[];\n\tprivate utilHelper: ValidationUtils;\n\tprivate customHelper: CustomRoomsDatasetHelper;\n\tprivate geoHelper: GeolocationFetcher;\n\n\tconstructor(datasetIds: string[]) {\n\t\tthis.datasetIds = datasetIds;\n\t\tthis.customHelper = new CustomRoomsDatasetHelper(this.datasetIds);\n\t\tthis.utilHelper = new ValidationUtils();\n\t\tthis.geoHelper = new GeolocationFetcher();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tif (this.isEntryInValid(id, content, kind)) {\n\t\t\treturn Promise.reject(new InsightError(\"ERROR\"));\n\t\t}\n\t\ttry {\n\t\t\tconst zip = new JSZip();\n\t\t\tawait this.validateDatasetStructure(content);\n\t\t\tconst decodedContent = await zip.loadAsync(content, {base64: true});\n\t\t\tawait this.validateIndexHtml(decodedContent);\n\t\t\tthis.datasetIds.push(id);\n\t\t\tconst data = await this.customHelper.createDataset(decodedContent);\n\t\t\tconst datasetObject: InsightDataset = {\n\t\t\t\tid: id,\n\t\t\t\tkind: InsightDatasetKind.Rooms,\n\t\t\t\tnumRows: data.length,\n\t\t\t};\n\n\t\t\tdata.unshift(datasetObject);\n\t\t\tconst jsonString = JSON.stringify(data, null, 2);\n\t\t\tconst filePath = `data/${id}.json`;\n\t\t\ttry {\n\t\t\t\t// Check if the 'data' folder exists, create it if not\n\t\t\t\tconst dataFolderExists = await fs.pathExists(\"data\");\n\t\t\t\tif (!dataFolderExists) {\n\t\t\t\t\tawait fs.mkdir(\"data\");\n\t\t\t\t}\n\t\t\t\tawait fs.writeFile(filePath, jsonString);\n\t\t\t\tconsole.log(`Dataset written to ${filePath}`);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`Error writing dataset to file: ${error}`);\n\t\t\t}\n\n\t\t\treturn Promise.resolve(this.datasetIds);\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t}\n\n\tprivate isEntryInValid(id: string, content: string, kind: InsightDatasetKind) {\n\t\treturn (\n\t\t\tthis.utilHelper.isInvalidID(id) ||\n\t\t\tthis.utilHelper.isInValidContent(content) ||\n\t\t\tthis.utilHelper.isInValidKind(kind) ||\n\t\t\tthis.datasetIds.includes(id)\n\t\t);\n\t}\n\n\tprivate async validateDatasetStructure(content: string): Promise<void> {\n\t\ttry {\n\t\t\tconst zip = new JSZip();\n\t\t\tconst decodedContent = await zip.loadAsync(content, {base64: true});\n\t\t\tawait this.utilHelper.validateCampusFolder(decodedContent);\n\t\t\tconst indexHtml = decodedContent.file(\"index.htm\");\n\t\t\tif (!indexHtml) {\n\t\t\t\treturn Promise.reject( new InsightError(\"index.htm not found at the root of the zip file.\"));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new InsightError(\"Error validating dataset structure.\"));\n\t\t}\n\t}\n\n\tpublic async validateIndexHtml(decodedContent: JSZip): Promise<void> {\n\t\tconst indexHtml = decodedContent.file(\"index.htm\");\n\t\tif (!indexHtml) {\n\t\t\treturn Promise.reject(new InsightError(\"index.htm not found at the root of the zip file.\"));\n\t\t}\n\n\t\tconst indexHtmlContent = await indexHtml.async(\"text\");\n\t\tconst document = parse(indexHtmlContent);\n\n\n\t\t// Find and validate the table within the index.htm file\n\t\tconst buildingTable = this.geoHelper.findBuildingTable(document);\n\t\tif (!buildingTable) {\n\t\t\treturn Promise.reject(new InsightError(\"No valid building table found in index.htm.\"));\n\t\t}\n\n\t\t// Further validation of the building table if needed\n\t\t// Validate each building file linked from the index.htm file\n\t\tconst buildingNames = this.geoHelper.extractBuildingNames(buildingTable);\n\t\tlet isValidDataset = false;\n\n\t\tconst promises = buildingNames.map(async (buildingName) => {\n\t\t\ttry {\n\t\t\t\tlet thing = await this.geoHelper.validateBuildingFile(decodedContent, buildingName, buildingTable);\n\t\t\t\tisValidDataset = true;\n\t\t\t} catch (error) {\n\t\t\t\t//\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(promises);\n\n\t\tif (!isValidDataset) {\n\t\t\treturn Promise.reject(new InsightError(\"None of the building files were validated successfully.\"));\n\t\t} else{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fcc174392e10c826fb762f4fa907336cc2b1713e","contentHash":"40f48368e13b3521fd6e31614e12ea6b0131973cd98bc78a518a3644bf124054"},"/Users/rishishukla/Desktop/project_team067/src/controller/Roomdatasethelper2.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/Roomdatasethelper2.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":42}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":71}},"7":{"start":{"line":14,"column":26},"end":{"line":14,"column":58}},"8":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"9":{"start":{"line":16,"column":12},"end":{"line":16,"column":104}},"10":{"start":{"line":18,"column":33},"end":{"line":18,"column":62}},"11":{"start":{"line":19,"column":25},"end":{"line":19,"column":62}},"12":{"start":{"line":20,"column":30},"end":{"line":20,"column":81}},"13":{"start":{"line":21,"column":30},"end":{"line":21,"column":70}},"14":{"start":{"line":22,"column":27},"end":{"line":22,"column":29}},"15":{"start":{"line":23,"column":29},"end":{"line":39,"column":10}},"16":{"start":{"line":24,"column":33},"end":{"line":24,"column":112}},"17":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"18":{"start":{"line":26,"column":16},"end":{"line":26,"column":100}},"19":{"start":{"line":28,"column":33},"end":{"line":28,"column":82}},"20":{"start":{"line":29,"column":40},"end":{"line":29,"column":72}},"21":{"start":{"line":30,"column":37},"end":{"line":30,"column":77}},"22":{"start":{"line":31,"column":30},"end":{"line":31,"column":85}},"23":{"start":{"line":32,"column":12},"end":{"line":38,"column":13}},"24":{"start":{"line":33,"column":34},"end":{"line":33,"column":65}},"25":{"start":{"line":34,"column":33},"end":{"line":34,"column":95}},"26":{"start":{"line":35,"column":16},"end":{"line":35,"column":61}},"27":{"start":{"line":40,"column":8},"end":{"line":40,"column":40}},"28":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"29":{"start":{"line":44,"column":32},"end":{"line":48,"column":9}},"30":{"start":{"line":49,"column":27},"end":{"line":49,"column":29}},"31":{"start":{"line":50,"column":8},"end":{"line":64,"column":9}},"32":{"start":{"line":51,"column":12},"end":{"line":63,"column":13}},"33":{"start":{"line":52,"column":16},"end":{"line":62,"column":17}},"34":{"start":{"line":53,"column":20},"end":{"line":61,"column":21}},"35":{"start":{"line":54,"column":75},"end":{"line":54,"column":145}},"36":{"start":{"line":55,"column":24},"end":{"line":60,"column":25}},"37":{"start":{"line":56,"column":28},"end":{"line":56,"column":58}},"38":{"start":{"line":57,"column":28},"end":{"line":57,"column":95}},"39":{"start":{"line":58,"column":28},"end":{"line":58,"column":87}},"40":{"start":{"line":59,"column":28},"end":{"line":59,"column":48}},"41":{"start":{"line":65,"column":8},"end":{"line":65,"column":104}},"42":{"start":{"line":68,"column":29},"end":{"line":68,"column":38}},"43":{"start":{"line":69,"column":28},"end":{"line":69,"column":33}},"44":{"start":{"line":70,"column":24},"end":{"line":70,"column":26}},"45":{"start":{"line":71,"column":8},"end":{"line":85,"column":9}},"46":{"start":{"line":72,"column":12},"end":{"line":84,"column":13}},"47":{"start":{"line":73,"column":16},"end":{"line":83,"column":17}},"48":{"start":{"line":74,"column":20},"end":{"line":82,"column":21}},"49":{"start":{"line":75,"column":24},"end":{"line":75,"column":52}},"50":{"start":{"line":76,"column":24},"end":{"line":81,"column":25}},"51":{"start":{"line":78,"column":32},"end":{"line":78,"column":88}},"52":{"start":{"line":79,"column":32},"end":{"line":79,"column":75}},"53":{"start":{"line":80,"column":32},"end":{"line":80,"column":38}},"54":{"start":{"line":86,"column":8},"end":{"line":86,"column":58}},"55":{"start":{"line":89,"column":19},"end":{"line":89,"column":21}},"56":{"start":{"line":90,"column":8},"end":{"line":100,"column":9}},"57":{"start":{"line":91,"column":12},"end":{"line":99,"column":13}},"58":{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},"59":{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},"60":{"start":{"line":94,"column":24},"end":{"line":94,"column":74}},"61":{"start":{"line":95,"column":24},"end":{"line":95,"column":30}},"62":{"start":{"line":98,"column":16},"end":{"line":98,"column":22}},"63":{"start":{"line":101,"column":8},"end":{"line":101,"column":20}},"64":{"start":{"line":104,"column":22},"end":{"line":104,"column":24}},"65":{"start":{"line":105,"column":8},"end":{"line":111,"column":9}},"66":{"start":{"line":106,"column":12},"end":{"line":110,"column":13}},"67":{"start":{"line":108,"column":16},"end":{"line":108,"column":70}},"68":{"start":{"line":109,"column":16},"end":{"line":109,"column":22}},"69":{"start":{"line":112,"column":8},"end":{"line":112,"column":23}},"70":{"start":{"line":115,"column":26},"end":{"line":115,"column":28}},"71":{"start":{"line":116,"column":8},"end":{"line":127,"column":9}},"72":{"start":{"line":117,"column":12},"end":{"line":126,"column":13}},"73":{"start":{"line":118,"column":16},"end":{"line":125,"column":17}},"74":{"start":{"line":119,"column":20},"end":{"line":124,"column":21}},"75":{"start":{"line":120,"column":41},"end":{"line":120,"column":76}},"76":{"start":{"line":121,"column":24},"end":{"line":123,"column":25}},"77":{"start":{"line":122,"column":28},"end":{"line":122,"column":53}},"78":{"start":{"line":128,"column":8},"end":{"line":128,"column":25}},"79":{"start":{"line":131,"column":32},"end":{"line":137,"column":9}},"80":{"start":{"line":138,"column":25},"end":{"line":138,"column":27}},"81":{"start":{"line":139,"column":29},"end":{"line":139,"column":38}},"82":{"start":{"line":140,"column":8},"end":{"line":144,"column":9}},"83":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"84":{"start":{"line":142,"column":16},"end":{"line":142,"column":95}},"85":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"86":{"start":{"line":146,"column":12},"end":{"line":146,"column":28}},"87":{"start":{"line":148,"column":8},"end":{"line":148,"column":20}},"88":{"start":{"line":151,"column":8},"end":{"line":185,"column":9}},"89":{"start":{"line":152,"column":12},"end":{"line":184,"column":13}},"90":{"start":{"line":153,"column":16},"end":{"line":153,"column":44}},"91":{"start":{"line":154,"column":16},"end":{"line":183,"column":17}},"92":{"start":{"line":156,"column":24},"end":{"line":161,"column":25}},"93":{"start":{"line":157,"column":28},"end":{"line":160,"column":29}},"94":{"start":{"line":158,"column":32},"end":{"line":158,"column":98}},"95":{"start":{"line":159,"column":32},"end":{"line":159,"column":38}},"96":{"start":{"line":162,"column":24},"end":{"line":162,"column":30}},"97":{"start":{"line":164,"column":24},"end":{"line":164,"column":102}},"98":{"start":{"line":165,"column":24},"end":{"line":165,"column":30}},"99":{"start":{"line":167,"column":24},"end":{"line":167,"column":89}},"100":{"start":{"line":168,"column":24},"end":{"line":168,"column":30}},"101":{"start":{"line":170,"column":24},"end":{"line":170,"column":84}},"102":{"start":{"line":171,"column":24},"end":{"line":171,"column":30}},"103":{"start":{"line":173,"column":24},"end":{"line":181,"column":25}},"104":{"start":{"line":174,"column":28},"end":{"line":180,"column":29}},"105":{"start":{"line":175,"column":49},"end":{"line":175,"column":94}},"106":{"start":{"line":175,"column":73},"end":{"line":175,"column":93}},"107":{"start":{"line":176,"column":32},"end":{"line":179,"column":33}},"108":{"start":{"line":177,"column":36},"end":{"line":177,"column":67}},"109":{"start":{"line":178,"column":36},"end":{"line":178,"column":42}},"110":{"start":{"line":182,"column":24},"end":{"line":182,"column":30}},"111":{"start":{"line":188,"column":29},"end":{"line":188,"column":31}},"112":{"start":{"line":189,"column":28},"end":{"line":189,"column":96}},"113":{"start":{"line":190,"column":8},"end":{"line":200,"column":9}},"114":{"start":{"line":191,"column":12},"end":{"line":199,"column":13}},"115":{"start":{"line":192,"column":33},"end":{"line":192,"column":50}},"116":{"start":{"line":193,"column":34},"end":{"line":193,"column":51}},"117":{"start":{"line":194,"column":32},"end":{"line":194,"column":52}},"118":{"start":{"line":195,"column":68},"end":{"line":195,"column":76}},"119":{"start":{"line":196,"column":29},"end":{"line":196,"column":53}},"120":{"start":{"line":197,"column":29},"end":{"line":197,"column":156}},"121":{"start":{"line":198,"column":16},"end":{"line":198,"column":40}},"122":{"start":{"line":201,"column":8},"end":{"line":201,"column":28}},"123":{"start":{"line":204,"column":30},"end":{"line":204,"column":32}},"124":{"start":{"line":205,"column":8},"end":{"line":221,"column":9}},"125":{"start":{"line":206,"column":12},"end":{"line":220,"column":13}},"126":{"start":{"line":207,"column":16},"end":{"line":219,"column":17}},"127":{"start":{"line":208,"column":20},"end":{"line":218,"column":21}},"128":{"start":{"line":209,"column":24},"end":{"line":217,"column":25}},"129":{"start":{"line":210,"column":28},"end":{"line":216,"column":29}},"130":{"start":{"line":212,"column":53},"end":{"line":212,"column":96}},"131":{"start":{"line":213,"column":32},"end":{"line":215,"column":33}},"132":{"start":{"line":214,"column":36},"end":{"line":214,"column":69}},"133":{"start":{"line":222,"column":8},"end":{"line":222,"column":29}},"134":{"start":{"line":225,"column":0},"end":{"line":225,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":28},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":40},"end":{"line":42,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":47},"end":{"line":23,"column":48}},"loc":{"start":{"line":23,"column":67},"end":{"line":39,"column":9}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":53},"end":{"line":66,"column":5}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":70},"end":{"line":87,"column":5}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":46},"end":{"line":102,"column":5}},"line":88},"6":{"name":"(anonymous_6)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":35},"end":{"line":113,"column":5}},"line":103},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":31},"end":{"line":129,"column":5}},"line":114},"8":{"name":"(anonymous_8)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":35},"end":{"line":149,"column":5}},"line":130},"9":{"name":"(anonymous_9)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":78},"end":{"line":186,"column":5}},"line":150},"10":{"name":"(anonymous_10)","decl":{"start":{"line":175,"column":63},"end":{"line":175,"column":64}},"loc":{"start":{"line":175,"column":73},"end":{"line":175,"column":93}},"line":175},"11":{"name":"(anonymous_11)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":62},"end":{"line":202,"column":5}},"line":187},"12":{"name":"(anonymous_12)","decl":{"start":{"line":203,"column":4},"end":{"line":203,"column":5}},"loc":{"start":{"line":203,"column":40},"end":{"line":223,"column":5}},"line":203}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"1":{"loc":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},{"start":{"line":25,"column":12},"end":{"line":27,"column":13}}],"line":25},"2":{"loc":{"start":{"line":32,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":38,"column":13}},{"start":{"line":32,"column":12},"end":{"line":38,"column":13}}],"line":32},"3":{"loc":{"start":{"line":51,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":63,"column":13}},{"start":{"line":51,"column":12},"end":{"line":63,"column":13}}],"line":51},"4":{"loc":{"start":{"line":53,"column":20},"end":{"line":61,"column":21}},"type":"if","locations":[{"start":{"line":53,"column":20},"end":{"line":61,"column":21}},{"start":{"line":53,"column":20},"end":{"line":61,"column":21}}],"line":53},"5":{"loc":{"start":{"line":55,"column":24},"end":{"line":60,"column":25}},"type":"if","locations":[{"start":{"line":55,"column":24},"end":{"line":60,"column":25}},{"start":{"line":55,"column":24},"end":{"line":60,"column":25}}],"line":55},"6":{"loc":{"start":{"line":55,"column":28},"end":{"line":55,"column":89}},"type":"binary-expr","locations":[{"start":{"line":55,"column":28},"end":{"line":55,"column":72}},{"start":{"line":55,"column":76},"end":{"line":55,"column":89}}],"line":55},"7":{"loc":{"start":{"line":72,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":84,"column":13}},{"start":{"line":72,"column":12},"end":{"line":84,"column":13}}],"line":72},"8":{"loc":{"start":{"line":74,"column":20},"end":{"line":82,"column":21}},"type":"if","locations":[{"start":{"line":74,"column":20},"end":{"line":82,"column":21}},{"start":{"line":74,"column":20},"end":{"line":82,"column":21}}],"line":74},"9":{"loc":{"start":{"line":76,"column":24},"end":{"line":81,"column":25}},"type":"switch","locations":[{"start":{"line":77,"column":28},"end":{"line":80,"column":38}}],"line":76},"10":{"loc":{"start":{"line":91,"column":12},"end":{"line":99,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":99,"column":13}},{"start":{"line":91,"column":12},"end":{"line":99,"column":13}}],"line":91},"11":{"loc":{"start":{"line":91,"column":16},"end":{"line":91,"column":105}},"type":"binary-expr","locations":[{"start":{"line":91,"column":16},"end":{"line":91,"column":40}},{"start":{"line":91,"column":44},"end":{"line":91,"column":105}}],"line":91},"12":{"loc":{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},"type":"if","locations":[{"start":{"line":93,"column":20},"end":{"line":96,"column":21}},{"start":{"line":93,"column":20},"end":{"line":96,"column":21}}],"line":93},"13":{"loc":{"start":{"line":106,"column":12},"end":{"line":110,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":110,"column":13}},{"start":{"line":106,"column":12},"end":{"line":110,"column":13}}],"line":106},"14":{"loc":{"start":{"line":106,"column":16},"end":{"line":107,"column":94}},"type":"binary-expr","locations":[{"start":{"line":106,"column":16},"end":{"line":106,"column":40}},{"start":{"line":107,"column":16},"end":{"line":107,"column":94}}],"line":106},"15":{"loc":{"start":{"line":117,"column":12},"end":{"line":126,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":126,"column":13}},{"start":{"line":117,"column":12},"end":{"line":126,"column":13}}],"line":117},"16":{"loc":{"start":{"line":119,"column":20},"end":{"line":124,"column":21}},"type":"if","locations":[{"start":{"line":119,"column":20},"end":{"line":124,"column":21}},{"start":{"line":119,"column":20},"end":{"line":124,"column":21}}],"line":119},"17":{"loc":{"start":{"line":121,"column":24},"end":{"line":123,"column":25}},"type":"if","locations":[{"start":{"line":121,"column":24},"end":{"line":123,"column":25}},{"start":{"line":121,"column":24},"end":{"line":123,"column":25}}],"line":121},"18":{"loc":{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":143,"column":13}},{"start":{"line":141,"column":12},"end":{"line":143,"column":13}}],"line":141},"19":{"loc":{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":147,"column":9}},{"start":{"line":145,"column":8},"end":{"line":147,"column":9}}],"line":145},"20":{"loc":{"start":{"line":152,"column":12},"end":{"line":184,"column":13}},"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":184,"column":13}},{"start":{"line":152,"column":12},"end":{"line":184,"column":13}}],"line":152},"21":{"loc":{"start":{"line":154,"column":16},"end":{"line":183,"column":17}},"type":"switch","locations":[{"start":{"line":155,"column":20},"end":{"line":162,"column":30}},{"start":{"line":163,"column":20},"end":{"line":165,"column":30}},{"start":{"line":166,"column":20},"end":{"line":168,"column":30}},{"start":{"line":169,"column":20},"end":{"line":171,"column":30}},{"start":{"line":172,"column":20},"end":{"line":182,"column":30}}],"line":154},"22":{"loc":{"start":{"line":157,"column":28},"end":{"line":160,"column":29}},"type":"if","locations":[{"start":{"line":157,"column":28},"end":{"line":160,"column":29}},{"start":{"line":157,"column":28},"end":{"line":160,"column":29}}],"line":157},"23":{"loc":{"start":{"line":174,"column":28},"end":{"line":180,"column":29}},"type":"if","locations":[{"start":{"line":174,"column":28},"end":{"line":180,"column":29}},{"start":{"line":174,"column":28},"end":{"line":180,"column":29}}],"line":174},"24":{"loc":{"start":{"line":174,"column":32},"end":{"line":174,"column":63}},"type":"binary-expr","locations":[{"start":{"line":174,"column":32},"end":{"line":174,"column":51}},{"start":{"line":174,"column":55},"end":{"line":174,"column":63}}],"line":174},"25":{"loc":{"start":{"line":176,"column":32},"end":{"line":179,"column":33}},"type":"if","locations":[{"start":{"line":176,"column":32},"end":{"line":179,"column":33}},{"start":{"line":176,"column":32},"end":{"line":179,"column":33}}],"line":176},"26":{"loc":{"start":{"line":190,"column":8},"end":{"line":200,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":200,"column":9}},{"start":{"line":190,"column":8},"end":{"line":200,"column":9}}],"line":190},"27":{"loc":{"start":{"line":190,"column":12},"end":{"line":190,"column":74}},"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":41}},{"start":{"line":190,"column":45},"end":{"line":190,"column":74}}],"line":190},"28":{"loc":{"start":{"line":206,"column":12},"end":{"line":220,"column":13}},"type":"if","locations":[{"start":{"line":206,"column":12},"end":{"line":220,"column":13}},{"start":{"line":206,"column":12},"end":{"line":220,"column":13}}],"line":206},"29":{"loc":{"start":{"line":208,"column":20},"end":{"line":218,"column":21}},"type":"if","locations":[{"start":{"line":208,"column":20},"end":{"line":218,"column":21}},{"start":{"line":208,"column":20},"end":{"line":218,"column":21}}],"line":208},"30":{"loc":{"start":{"line":210,"column":28},"end":{"line":216,"column":29}},"type":"if","locations":[{"start":{"line":210,"column":28},"end":{"line":216,"column":29}},{"start":{"line":210,"column":28},"end":{"line":216,"column":29}}],"line":210},"31":{"loc":{"start":{"line":210,"column":32},"end":{"line":211,"column":107}},"type":"binary-expr","locations":[{"start":{"line":210,"column":32},"end":{"line":210,"column":56}},{"start":{"line":211,"column":32},"end":{"line":211,"column":107}}],"line":210},"32":{"loc":{"start":{"line":213,"column":32},"end":{"line":215,"column":33}},"type":"if","locations":[{"start":{"line":213,"column":32},"end":{"line":215,"column":33}},{"start":{"line":213,"column":32},"end":{"line":215,"column":33}}],"line":213}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":33,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":74,"17":74,"18":0,"19":74,"20":74,"21":74,"22":74,"23":74,"24":44,"25":44,"26":44,"27":1,"28":1,"29":74,"30":74,"31":74,"32":296,"33":74,"34":5550,"35":2775,"36":2775,"37":74,"38":74,"39":74,"40":74,"41":0,"42":2775,"43":2775,"44":2775,"45":2775,"46":30525,"47":13875,"48":41625,"49":8325,"50":8325,"51":2775,"52":2775,"53":2775,"54":2775,"55":74,"56":74,"57":444,"58":74,"59":148,"60":74,"61":74,"62":74,"63":74,"64":74,"65":74,"66":592,"67":74,"68":74,"69":74,"70":44,"71":44,"72":220,"73":44,"74":772,"75":364,"76":364,"77":364,"78":44,"79":364,"80":364,"81":364,"82":364,"83":4004,"84":1820,"85":364,"86":364,"87":0,"88":1820,"89":9100,"90":1820,"91":1820,"92":364,"93":728,"94":364,"95":364,"96":364,"97":364,"98":364,"99":364,"100":364,"101":364,"102":364,"103":364,"104":728,"105":364,"106":364,"107":364,"108":364,"109":364,"110":364,"111":44,"112":44,"113":44,"114":44,"115":364,"116":364,"117":364,"118":364,"119":364,"120":364,"121":364,"122":44,"123":1,"124":1,"125":5,"126":1,"127":149,"128":74,"129":814,"130":74,"131":74,"132":74,"133":1,"134":1},"f":{"0":33,"1":1,"2":74,"3":74,"4":2775,"5":74,"6":74,"7":44,"8":364,"9":1820,"10":364,"11":44,"12":1},"b":{"0":[0,1],"1":[0,74],"2":[44,30],"3":[74,222],"4":[2775,2775],"5":[74,2701],"6":[2775,2775],"7":[13875,16650],"8":[8325,33300],"9":[2775],"10":[74,370],"11":[444,222],"12":[74,74],"13":[74,518],"14":[592,296],"15":[44,176],"16":[364,408],"17":[364,0],"18":[1820,2184],"19":[364,0],"20":[1820,7280],"21":[364,364,364,364,364],"22":[364,364],"23":[364,364],"24":[728,364],"25":[364,0],"26":[44,0],"27":[44,44],"28":[1,4],"29":[74,75],"30":[74,740],"31":[814,370],"32":[74,0]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/Roomdatasethelper2.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/Roomdatasethelper2.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\nimport {Room} from \"./Rooms\";\nimport JSZip from \"jszip\";\nimport {parse} from \"parse5\";\nimport {RoomsDatasetHelper} from \"./RoomDatasetHelper\";\nimport {GeolocationFetcher} from \"./indexhtml\";\nimport {GeoResponse} from \"./response\";\n\nexport class CustomRoomsDatasetHelper {\n\tprivate roomsDatasetHelper: GeolocationFetcher;\n\n\tconstructor(datasetIds: string[]) {\n\t\tthis.roomsDatasetHelper = new GeolocationFetcher();\n\t}\n\n// hello\n\tpublic async createDataset(decodedContent: JSZip): Promise<any[]> {\n\t\tconst indexHtml = decodedContent.file(\"index.htm\");\n\t\tif (!indexHtml) {\n\t\t\tthrow new InsightError(\"index.htm not found at the root of the zip file.\");\n\t\t}\n\n\t\tconst indexHtmlContent = await indexHtml.async(\"text\");\n\t\tconst document = parse(indexHtmlContent);\n\n\t\t// Find and validate the table within the index.htm file\n\t\tconst buildingTable = this.roomsDatasetHelper.findBuildingTable(document);\n\t\tconst buildingNames = this.extractBuildingNames(buildingTable);\n\t\tlet combinedInfo: Room[] = [];\n\n\t\t// Extract building names and some information from the building table\n\t\t// Create an array of promises for room extraction\n\t\tconst roomPromises = buildingNames.map(async (building) => {\n\t\t\tconst buildingFile = decodedContent.file(`campus/discover/buildings-and-classrooms/${building}.htm`);\n\t\t\tif (!buildingFile) {\n\t\t\t\tthrow new InsightError(`Building file not found: ${building}.htm`);\n\t\t\t}\n\t\t\tconst buildingInfo = this.extractBuildingInfo(buildingTable, building);\n\t\t\tconst buildingFileContent = await buildingFile.async(\"text\");\n\t\t\tconst buildingDocument = parse(buildingFileContent);\n\t\t\tconst roomTable = this.roomsDatasetHelper.findRoomTable(buildingDocument);\n\t\t\tif (roomTable) {\n\t\t\t\t// Extract room information from the room table for this building\n\t\t\t\tconst roomInfos = this.extractRoomInfo(roomTable);\n\n\t\t\t\t// Combine building information with room information for this building\n\t\t\t\tconst combined = await this.combineBuildingAndRoomInfo(buildingInfo, roomInfos);\n\t\t\t\tcombinedInfo = combinedInfo.concat(combined);\n\t\t\t\t// Perform additional validation or processing as needed with combinedInfo\n\t\t\t} else {\n\t\t\t\t//\n\t\t\t}\n\t\t});\n\n\t\t// Wait for all room extraction promises to resolve\n\t\tawait Promise.all(roomPromises);\n\t\treturn combinedInfo;\n\t}\n\n\tprivate extractBuildingInfo(buildingTable: any, buildingName: string): any {\n\t\tconst requiredClasses = [\n\t\t\t\"views-field-field-building-code\",\n\t\t\t\"views-field-title\",\n\t\t\t\"views-field-field-building-address\"\n\t\t];\n\n\t\tlet buildingInfo: any = {};\n\n\t\tfor (const childNode of buildingTable.childNodes) {\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\tfor (const trNode of childNode.childNodes) {\n\t\t\t\t\tif (trNode.nodeName === \"tr\") {\n\t\t\t\t\t\tconst {foundClasses, isMatchingRow, innerText} =\n\t\t\t\t\t\t\tthis.extractBuildingInfoFromRow(trNode, requiredClasses, buildingName);\n\t\t\t\t\t\tif (foundClasses.size === requiredClasses.length && isMatchingRow) {\n\t\t\t\t\t\t\tbuildingInfo.code = innerText;\n\t\t\t\t\t\t\tbuildingInfo.name = this.extractBuildingName(trNode, buildingName);\n\t\t\t\t\t\t\tbuildingInfo.address = this.extractBuildingAddress(trNode);\n\t\t\t\t\t\t\treturn buildingInfo;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new InsightError(`Failed to extract building info for ${buildingName}.`);\n\t}\n\n\tprivate extractBuildingInfoFromRow(trNode: any, requiredClasses: string[], buildingName: string):\n\t\t{foundClasses: Set<string>, isMatchingRow: boolean, innerText: string} {\n\t\tconst foundClasses = new Set<string>();\n\t\tlet isMatchingRow = false;\n\t\tlet innerText = \"\";\n\n\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\tif (tdNode.nodeName === \"td\") {\n\t\t\t\tfor (const className of requiredClasses) {\n\t\t\t\t\tif (this.roomsDatasetHelper.hasClass(tdNode, className)) {\n\t\t\t\t\t\tfoundClasses.add(className);\n\t\t\t\t\t\tswitch (className) {\n\t\t\t\t\t\t\tcase \"views-field-field-building-code\":\n\t\t\t\t\t\t\t\tinnerText = this.roomsDatasetHelper.getNodeText(tdNode);\n\t\t\t\t\t\t\t\tisMatchingRow = innerText === buildingName;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {foundClasses, isMatchingRow, innerText};\n\t}\n\n\tprivate extractBuildingName(trNode: any, buildingName: string): string {\n\t\tlet name = \"\";\n\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\tif (tdNode.nodeName === \"td\" && this.roomsDatasetHelper.hasClass(tdNode, \"views-field-title\")) {\n\t\t\t\tfor (const aNode of tdNode.childNodes) {\n\t\t\t\t\tif (aNode.nodeName === \"a\") {\n\t\t\t\t\t\tname = this.roomsDatasetHelper.getNodeText(aNode);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn name;\n\t}\n\n\tprivate extractBuildingAddress(trNode: any): string {\n\t\tlet address = \"\";\n\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\tif (tdNode.nodeName === \"td\" &&\n\t\t\t\tthis.roomsDatasetHelper.hasClass(tdNode, \"views-field-field-building-address\")) {\n\t\t\t\taddress = this.roomsDatasetHelper.getNodeText(tdNode);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn address;\n\t}\n\n\tprivate extractRoomInfo(roomTable: any): any[] {\n\t\tconst roomInfos: any[] = [];\n\n\t\tfor (const childNode of roomTable.childNodes) {\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\tfor (const trNode of childNode.childNodes) {\n\t\t\t\t\tif (trNode.nodeName === \"tr\") {\n\t\t\t\t\t\tconst roomInfo = this.extractRoomInfoFromRow(trNode);\n\t\t\t\t\t\tif (roomInfo) {\n\t\t\t\t\t\t\troomInfos.push(roomInfo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn roomInfos;\n\t}\n\n\tprivate extractRoomInfoFromRow(trNode: any): any {\n\t\tconst requiredClasses = [\n\t\t\t\"views-field-field-room-number\",\n\t\t\t\"views-field-field-room-capacity\",\n\t\t\t\"views-field-field-room-furniture\",\n\t\t\t\"views-field-field-room-type\",\n\t\t\t\"views-field-nothing\"\n\t\t];\n\n\t\tconst roomInfo: any = {};\n\t\tconst foundClasses = new Set<string>();\n\n\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\tif (tdNode.nodeName === \"td\") {\n\t\t\t\tthis.extractRoomInfoFromClass(tdNode, requiredClasses, roomInfo, foundClasses);\n\t\t\t}\n\t\t}\n\n\t\t// Check if all required classes are found for this room\n\t\tif (foundClasses.size === requiredClasses.length) {\n\t\t\treturn roomInfo;\n\t\t}\n\n\t\treturn null; // Return null if the row doesn't contain all required classes\n\t}\n\n\tprivate extractRoomInfoFromClass\n\t(tdNode: any, requiredClasses: string[], roomInfo: any, foundClasses: Set<string>): void {\n\t\tfor (const className of requiredClasses) {\n\t\t\tif (this.roomsDatasetHelper.hasClass(tdNode, className)) {\n\t\t\t\tfoundClasses.add(className);\n\t\t\t\tswitch (className) {\n\t\t\t\t\tcase \"views-field-field-room-number\":\n\t\t\t\t\t\tfor (const childNode1 of tdNode.childNodes) {\n\t\t\t\t\t\t\tif (childNode1.nodeName === \"a\") {\n\t\t\t\t\t\t\t\troomInfo.number = this.roomsDatasetHelper.getNodeText(childNode1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field-field-room-capacity\":\n\t\t\t\t\t\troomInfo.capacity = parseInt(this.roomsDatasetHelper.getNodeText(tdNode), 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field-field-room-furniture\":\n\t\t\t\t\t\troomInfo.furniture = this.roomsDatasetHelper.getNodeText(tdNode);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field-field-room-type\":\n\t\t\t\t\t\troomInfo.type = this.roomsDatasetHelper.getNodeText(tdNode);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"views-field-nothing\":\n\t\t\t\t\t\tfor (const c1 of tdNode.childNodes) {\n\t\t\t\t\t\t\tif (c1.nodeName === \"a\" && c1.attrs) {\n\t\t\t\t\t\t\t\tconst hrefAttr = c1.attrs.find((attr: any) =>\n\t\t\t\t\t\t\t\t\tattr.name === \"href\");\n\t\t\t\t\t\t\t\tif (hrefAttr) {\n\t\t\t\t\t\t\t\t\troomInfo.link = hrefAttr.value;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprivate async combineBuildingAndRoomInfo(buildingInfo: any, roomInfos: any[]): Promise<Room[]> {\n\t\tconst combinedInfo: Room[] = [];\n\n\t\t// Fetch geolocation once for the building\n\t\tconst geolocation = await this.roomsDatasetHelper.fetchGeolocation(buildingInfo.address);\n\t\t// If geolocation has lat and lon defined\n\t\tif (geolocation.lat !== undefined && geolocation.lon !== undefined) {\n\t\t\t// Loop through each room info and create a new Room instance\n\t\t\tfor (const roomInfo of roomInfos) {\n\t\t\t\t// Combine building info with room info\n\t\t\t\tconst fullName = buildingInfo.name;\n\t\t\t\tconst shortName = buildingInfo.code;\n\t\t\t\tconst address = buildingInfo.address;\n\n\t\t\t\tconst {\n\t\t\t\t\tnumber,\n\t\t\t\t\tcapacity,\n\t\t\t\t\ttype,\n\t\t\t\t\tfurniture,\n\t\t\t\t\tlink\n\t\t\t\t} = roomInfo;\n\t\t\t\tconst name = shortName + \"_\" + number;\n\n\t\t\t\t// Create a new Room instance\n\t\t\t\tconst room = new Room(\n\t\t\t\t\tfullName,\n\t\t\t\t\tshortName,\n\t\t\t\t\tnumber,\n\t\t\t\t\tname, // Concatenate building name and room number for the name\n\t\t\t\t\taddress,\n\t\t\t\t\tgeolocation.lat,\n\t\t\t\t\tgeolocation.lon,\n\t\t\t\t\tcapacity,\n\t\t\t\t\ttype,\n\t\t\t\t\tfurniture,\n\t\t\t\t\tlink\n\t\t\t\t);\n\n\t\t\t\t// Add the new Room instance to the combinedInfo array\n\t\t\t\tcombinedInfo.push(room);\n\t\t\t}\n\t\t}\n\n\t\treturn combinedInfo;\n\t}\n\n\n\tpublic extractBuildingNames(buildingTable: any): string[] {\n\t\tconst buildingNames: string[] = [];\n\t\tfor (const childNode of buildingTable.childNodes) {\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\tfor (const trNode of childNode.childNodes) {\n\t\t\t\t\tif (trNode.nodeName === \"tr\") {\n\t\t\t\t\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\t\t\t\t\tif (tdNode.nodeName === \"td\" &&\n\t\t\t\t\t\t\t\tthis.roomsDatasetHelper.hasClass(tdNode, \"views-field-field-building-code\")) {\n\t\t\t\t\t\t\t\tconst buildingName = this.roomsDatasetHelper.getNodeText(tdNode);\n\t\t\t\t\t\t\t\tif (buildingName) {\n\t\t\t\t\t\t\t\t\tbuildingNames.push(buildingName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn buildingNames;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f2c2fec9d16bc1c3e8bdfc4f294bfdcb561352d7","contentHash":"e0b86a583ace7d15d91c02a8a19929f8113053f04ae47c62a1a4ca523c57ea09"},"/Users/rishishukla/Desktop/project_team067/src/controller/Rooms.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/Rooms.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":25}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":35}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":152},"end":{"line":28,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":16,"column":29}},"type":"default-arg","locations":[{"start":{"line":16,"column":27},"end":{"line":16,"column":29}}],"line":16},"1":{"loc":{"start":{"line":16,"column":31},"end":{"line":16,"column":45}},"type":"default-arg","locations":[{"start":{"line":16,"column":43},"end":{"line":16,"column":45}}],"line":16},"2":{"loc":{"start":{"line":16,"column":47},"end":{"line":16,"column":58}},"type":"default-arg","locations":[{"start":{"line":16,"column":56},"end":{"line":16,"column":58}}],"line":16},"3":{"loc":{"start":{"line":16,"column":60},"end":{"line":16,"column":69}},"type":"default-arg","locations":[{"start":{"line":16,"column":67},"end":{"line":16,"column":69}}],"line":16},"4":{"loc":{"start":{"line":16,"column":71},"end":{"line":16,"column":83}},"type":"default-arg","locations":[{"start":{"line":16,"column":81},"end":{"line":16,"column":83}}],"line":16},"5":{"loc":{"start":{"line":16,"column":85},"end":{"line":16,"column":92}},"type":"default-arg","locations":[{"start":{"line":16,"column":91},"end":{"line":16,"column":92}}],"line":16},"6":{"loc":{"start":{"line":16,"column":94},"end":{"line":16,"column":101}},"type":"default-arg","locations":[{"start":{"line":16,"column":100},"end":{"line":16,"column":101}}],"line":16},"7":{"loc":{"start":{"line":16,"column":103},"end":{"line":16,"column":112}},"type":"default-arg","locations":[{"start":{"line":16,"column":111},"end":{"line":16,"column":112}}],"line":16},"8":{"loc":{"start":{"line":16,"column":114},"end":{"line":16,"column":123}},"type":"default-arg","locations":[{"start":{"line":16,"column":121},"end":{"line":16,"column":123}}],"line":16},"9":{"loc":{"start":{"line":16,"column":125},"end":{"line":16,"column":139}},"type":"default-arg","locations":[{"start":{"line":16,"column":137},"end":{"line":16,"column":139}}],"line":16},"10":{"loc":{"start":{"line":16,"column":141},"end":{"line":16,"column":150}},"type":"default-arg","locations":[{"start":{"line":16,"column":148},"end":{"line":16,"column":150}}],"line":16}},"s":{"0":1,"1":1,"2":364,"3":364,"4":364,"5":364,"6":364,"7":364,"8":364,"9":364,"10":364,"11":364,"12":364,"13":1},"f":{"0":364},"b":{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[0],"7":[0],"8":[0],"9":[0],"10":[0]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/Rooms.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/Rooms.ts"],"names":[],"mappings":";;;AAAA,MAAa,IAAI;IACC,QAAQ,CAAS;IACjB,SAAS,CAAS;IAClB,MAAM,CAAS;IACf,IAAI,CAAS;IACb,OAAO,CAAS;IAChB,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,KAAK,CAAS;IACd,IAAI,CAAS;IACb,SAAS,CAAS;IAClB,IAAI,CAAS;IAE9B,YACC,WAAmB,EAAE,EACrB,YAAoB,EAAE,EACtB,SAAiB,EAAE,EACnB,OAAe,EAAE,EACjB,UAAkB,EAAE,EACpB,MAAc,CAAC,EACf,MAAc,CAAC,EACf,QAAgB,CAAC,EACjB,OAAe,EAAE,EACjB,YAAoB,EAAE,EACtB,OAAe,EAAE;QAEjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;CACD;AAtCD,oBAsCC","sourcesContent":["export class Room {\n\tprivate readonly fullname: string;\n\tprivate readonly shortname: string;\n\tprivate readonly number: string;\n\tprivate readonly name: string;\n\tprivate readonly address: string;\n\tprivate readonly lat: number;\n\tprivate readonly lon: number;\n\tprivate readonly seats: number;\n\tprivate readonly type: string;\n\tprivate readonly furniture: string;\n\tprivate readonly href: string;\n// constructor\n\tconstructor(\n\t\tfullname: string = \"\",\n\t\tshortname: string = \"\",\n\t\tnumber: string = \"\",\n\t\tname: string = \"\",\n\t\taddress: string = \"\",\n\t\tlat: number = 0,\n\t\tlon: number = 0,\n\t\tseats: number = 0,\n\t\ttype: string = \"\",\n\t\tfurniture: string = \"\",\n\t\thref: string = \"\"\n\t) {\n\t\tthis.fullname = fullname;\n\t\tthis.shortname = shortname;\n\t\tthis.number = number;\n\t\tthis.name = name;\n\t\tthis.address = address;\n\t\tthis.lat = lat;\n\t\tthis.lon = lon;\n\t\tthis.seats = seats;\n\t\tthis.type = type;\n\t\tthis.furniture = furniture;\n\t\tthis.href = href;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b11902173091bb5d9b01e9b2a36dee8d9b198dd","contentHash":"97274334a57f25f04700173ddacfaca0a844c79634102f8aa3f2aca335ef46d0"},"/Users/rishishukla/Desktop/project_team067/src/controller/indexhtml.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/indexhtml.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":28}},"5":{"start":{"line":9,"column":8},"end":{"line":31,"column":11}},"6":{"start":{"line":10,"column":33},"end":{"line":10,"column":60}},"7":{"start":{"line":11,"column":25},"end":{"line":11,"column":105}},"8":{"start":{"line":12,"column":12},"end":{"line":30,"column":15}},"9":{"start":{"line":13,"column":16},"end":{"line":13,"column":40}},"10":{"start":{"line":14,"column":30},"end":{"line":14,"column":32}},"11":{"start":{"line":15,"column":16},"end":{"line":17,"column":19}},"12":{"start":{"line":16,"column":20},"end":{"line":16,"column":37}},"13":{"start":{"line":18,"column":16},"end":{"line":26,"column":19}},"14":{"start":{"line":19,"column":20},"end":{"line":25,"column":21}},"15":{"start":{"line":20,"column":43},"end":{"line":20,"column":62}},"16":{"start":{"line":21,"column":24},"end":{"line":21,"column":44}},"17":{"start":{"line":24,"column":24},"end":{"line":24,"column":75}},"18":{"start":{"line":27,"column":16},"end":{"line":29,"column":19}},"19":{"start":{"line":28,"column":20},"end":{"line":28,"column":71}},"20":{"start":{"line":34,"column":8},"end":{"line":51,"column":9}},"21":{"start":{"line":35,"column":12},"end":{"line":50,"column":13}},"22":{"start":{"line":36,"column":16},"end":{"line":49,"column":17}},"23":{"start":{"line":37,"column":20},"end":{"line":48,"column":21}},"24":{"start":{"line":38,"column":24},"end":{"line":47,"column":25}},"25":{"start":{"line":39,"column":28},"end":{"line":46,"column":29}},"26":{"start":{"line":40,"column":32},"end":{"line":45,"column":33}},"27":{"start":{"line":41,"column":36},"end":{"line":44,"column":37}},"28":{"start":{"line":43,"column":40},"end":{"line":43,"column":77}},"29":{"start":{"line":52,"column":8},"end":{"line":52,"column":18}},"30":{"start":{"line":55,"column":8},"end":{"line":63,"column":9}},"31":{"start":{"line":56,"column":23},"end":{"line":56,"column":25}},"32":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"33":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"34":{"start":{"line":59,"column":20},"end":{"line":59,"column":51}},"35":{"start":{"line":62,"column":12},"end":{"line":62,"column":24}},"36":{"start":{"line":64,"column":8},"end":{"line":64,"column":18}},"37":{"start":{"line":67,"column":8},"end":{"line":67,"column":118}},"38":{"start":{"line":67,"column":61},"end":{"line":67,"column":116}},"39":{"start":{"line":70,"column":29},"end":{"line":70,"column":38}},"40":{"start":{"line":71,"column":8},"end":{"line":79,"column":9}},"41":{"start":{"line":72,"column":12},"end":{"line":78,"column":13}},"42":{"start":{"line":73,"column":16},"end":{"line":77,"column":17}},"43":{"start":{"line":74,"column":20},"end":{"line":76,"column":21}},"44":{"start":{"line":75,"column":24},"end":{"line":75,"column":52}},"45":{"start":{"line":80,"column":8},"end":{"line":80,"column":76}},"46":{"start":{"line":80,"column":47},"end":{"line":80,"column":74}},"47":{"start":{"line":83,"column":29},"end":{"line":83,"column":38}},"48":{"start":{"line":84,"column":8},"end":{"line":101,"column":9}},"49":{"start":{"line":85,"column":12},"end":{"line":100,"column":13}},"50":{"start":{"line":86,"column":16},"end":{"line":98,"column":17}},"51":{"start":{"line":87,"column":20},"end":{"line":97,"column":21}},"52":{"start":{"line":88,"column":24},"end":{"line":96,"column":25}},"53":{"start":{"line":89,"column":28},"end":{"line":95,"column":29}},"54":{"start":{"line":90,"column":32},"end":{"line":94,"column":33}},"55":{"start":{"line":91,"column":36},"end":{"line":93,"column":37}},"56":{"start":{"line":92,"column":40},"end":{"line":92,"column":68}},"57":{"start":{"line":99,"column":16},"end":{"line":99,"column":22}},"58":{"start":{"line":102,"column":8},"end":{"line":102,"column":76}},"59":{"start":{"line":102,"column":47},"end":{"line":102,"column":74}},"60":{"start":{"line":105,"column":32},"end":{"line":109,"column":9}},"61":{"start":{"line":110,"column":8},"end":{"line":122,"column":9}},"62":{"start":{"line":111,"column":12},"end":{"line":121,"column":13}},"63":{"start":{"line":112,"column":16},"end":{"line":120,"column":17}},"64":{"start":{"line":113,"column":20},"end":{"line":119,"column":21}},"65":{"start":{"line":114,"column":24},"end":{"line":118,"column":25}},"66":{"start":{"line":115,"column":28},"end":{"line":117,"column":29}},"67":{"start":{"line":116,"column":32},"end":{"line":116,"column":102}},"68":{"start":{"line":123,"column":8},"end":{"line":123,"column":21}},"69":{"start":{"line":126,"column":8},"end":{"line":153,"column":9}},"70":{"start":{"line":127,"column":12},"end":{"line":135,"column":13}},"71":{"start":{"line":128,"column":16},"end":{"line":134,"column":17}},"72":{"start":{"line":129,"column":20},"end":{"line":133,"column":21}},"73":{"start":{"line":130,"column":24},"end":{"line":132,"column":25}},"74":{"start":{"line":131,"column":28},"end":{"line":131,"column":73}},"75":{"start":{"line":137,"column":13},"end":{"line":153,"column":9}},"76":{"start":{"line":138,"column":12},"end":{"line":151,"column":13}},"77":{"start":{"line":139,"column":16},"end":{"line":150,"column":17}},"78":{"start":{"line":140,"column":38},"end":{"line":140,"column":68}},"79":{"start":{"line":141,"column":20},"end":{"line":143,"column":21}},"80":{"start":{"line":142,"column":24},"end":{"line":142,"column":41}},"81":{"start":{"line":145,"column":21},"end":{"line":150,"column":17}},"82":{"start":{"line":146,"column":20},"end":{"line":149,"column":21}},"83":{"start":{"line":148,"column":24},"end":{"line":148,"column":41}},"84":{"start":{"line":152,"column":12},"end":{"line":152,"column":24}},"85":{"start":{"line":156,"column":8},"end":{"line":169,"column":9}},"86":{"start":{"line":157,"column":12},"end":{"line":168,"column":13}},"87":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"88":{"start":{"line":160,"column":20},"end":{"line":160,"column":37}},"89":{"start":{"line":163,"column":17},"end":{"line":168,"column":13}},"90":{"start":{"line":164,"column":34},"end":{"line":164,"column":64}},"91":{"start":{"line":165,"column":16},"end":{"line":167,"column":17}},"92":{"start":{"line":166,"column":20},"end":{"line":166,"column":37}},"93":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"94":{"start":{"line":173,"column":8},"end":{"line":185,"column":9}},"95":{"start":{"line":174,"column":12},"end":{"line":184,"column":13}},"96":{"start":{"line":175,"column":16},"end":{"line":183,"column":17}},"97":{"start":{"line":176,"column":20},"end":{"line":182,"column":21}},"98":{"start":{"line":177,"column":24},"end":{"line":181,"column":25}},"99":{"start":{"line":178,"column":28},"end":{"line":180,"column":29}},"100":{"start":{"line":179,"column":32},"end":{"line":179,"column":44}},"101":{"start":{"line":186,"column":8},"end":{"line":186,"column":21}},"102":{"start":{"line":189,"column":30},"end":{"line":189,"column":32}},"103":{"start":{"line":190,"column":8},"end":{"line":206,"column":9}},"104":{"start":{"line":191,"column":12},"end":{"line":205,"column":13}},"105":{"start":{"line":192,"column":16},"end":{"line":204,"column":17}},"106":{"start":{"line":193,"column":20},"end":{"line":203,"column":21}},"107":{"start":{"line":194,"column":24},"end":{"line":202,"column":25}},"108":{"start":{"line":195,"column":28},"end":{"line":201,"column":29}},"109":{"start":{"line":197,"column":53},"end":{"line":197,"column":77}},"110":{"start":{"line":198,"column":32},"end":{"line":200,"column":33}},"111":{"start":{"line":199,"column":36},"end":{"line":199,"column":69}},"112":{"start":{"line":207,"column":8},"end":{"line":207,"column":29}},"113":{"start":{"line":210,"column":29},"end":{"line":211,"column":80}},"114":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"115":{"start":{"line":213,"column":12},"end":{"line":213,"column":100}},"116":{"start":{"line":215,"column":36},"end":{"line":215,"column":68}},"117":{"start":{"line":216,"column":33},"end":{"line":216,"column":73}},"118":{"start":{"line":217,"column":26},"end":{"line":217,"column":62}},"119":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"120":{"start":{"line":219,"column":12},"end":{"line":219,"column":136}},"121":{"start":{"line":221,"column":38},"end":{"line":221,"column":95}},"122":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"123":{"start":{"line":223,"column":12},"end":{"line":223,"column":136}},"124":{"start":{"line":225,"column":30},"end":{"line":225,"column":76}},"125":{"start":{"line":226,"column":26},"end":{"line":226,"column":70}},"126":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"127":{"start":{"line":228,"column":12},"end":{"line":228,"column":116}},"128":{"start":{"line":230,"column":8},"end":{"line":230,"column":37}},"129":{"start":{"line":233,"column":8},"end":{"line":267,"column":9}},"130":{"start":{"line":234,"column":12},"end":{"line":242,"column":13}},"131":{"start":{"line":235,"column":16},"end":{"line":241,"column":17}},"132":{"start":{"line":236,"column":20},"end":{"line":240,"column":21}},"133":{"start":{"line":237,"column":24},"end":{"line":239,"column":25}},"134":{"start":{"line":238,"column":28},"end":{"line":238,"column":69}},"135":{"start":{"line":244,"column":13},"end":{"line":267,"column":9}},"136":{"start":{"line":245,"column":12},"end":{"line":265,"column":13}},"137":{"start":{"line":246,"column":16},"end":{"line":264,"column":17}},"138":{"start":{"line":247,"column":38},"end":{"line":247,"column":69}},"139":{"start":{"line":248,"column":20},"end":{"line":250,"column":21}},"140":{"start":{"line":249,"column":24},"end":{"line":249,"column":41}},"141":{"start":{"line":252,"column":21},"end":{"line":264,"column":17}},"142":{"start":{"line":253,"column":20},"end":{"line":263,"column":21}},"143":{"start":{"line":262,"column":24},"end":{"line":262,"column":41}},"144":{"start":{"line":266,"column":12},"end":{"line":266,"column":24}},"145":{"start":{"line":270,"column":8},"end":{"line":290,"column":9}},"146":{"start":{"line":271,"column":12},"end":{"line":289,"column":13}},"147":{"start":{"line":272,"column":16},"end":{"line":282,"column":17}},"148":{"start":{"line":281,"column":20},"end":{"line":281,"column":37}},"149":{"start":{"line":284,"column":17},"end":{"line":289,"column":13}},"150":{"start":{"line":285,"column":34},"end":{"line":285,"column":65}},"151":{"start":{"line":286,"column":16},"end":{"line":288,"column":17}},"152":{"start":{"line":287,"column":20},"end":{"line":287,"column":37}},"153":{"start":{"line":291,"column":8},"end":{"line":291,"column":20}},"154":{"start":{"line":294,"column":0},"end":{"line":294,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":36},"end":{"line":32,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":27},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":48},"end":{"line":31,"column":9}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":29},"end":{"line":12,"column":30}},"loc":{"start":{"line":12,"column":38},"end":{"line":30,"column":13}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":31},"end":{"line":15,"column":32}},"loc":{"start":{"line":15,"column":42},"end":{"line":17,"column":17}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":30},"end":{"line":18,"column":31}},"loc":{"start":{"line":18,"column":36},"end":{"line":26,"column":17}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":32},"end":{"line":27,"column":33}},"loc":{"start":{"line":27,"column":43},"end":{"line":29,"column":17}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":42},"end":{"line":53,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":22},"end":{"line":65,"column":5}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":33},"end":{"line":68,"column":5}},"line":66},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":51},"end":{"line":67,"column":52}},"loc":{"start":{"line":67,"column":61},"end":{"line":67,"column":116}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":49},"end":{"line":81,"column":5}},"line":69},"11":{"name":"(anonymous_11)","decl":{"start":{"line":80,"column":32},"end":{"line":80,"column":33}},"loc":{"start":{"line":80,"column":47},"end":{"line":80,"column":74}},"line":80},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":51},"end":{"line":103,"column":5}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":102,"column":32},"end":{"line":102,"column":33}},"loc":{"start":{"line":102,"column":47},"end":{"line":102,"column":74}},"line":102},"14":{"name":"(anonymous_14)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":53},"end":{"line":124,"column":5}},"line":104},"15":{"name":"(anonymous_15)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":28},"end":{"line":154,"column":5}},"line":125},"16":{"name":"(anonymous_16)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":28},"end":{"line":171,"column":5}},"line":155},"17":{"name":"(anonymous_17)","decl":{"start":{"line":172,"column":4},"end":{"line":172,"column":5}},"loc":{"start":{"line":172,"column":46},"end":{"line":187,"column":5}},"line":172},"18":{"name":"(anonymous_18)","decl":{"start":{"line":188,"column":4},"end":{"line":188,"column":5}},"loc":{"start":{"line":188,"column":40},"end":{"line":208,"column":5}},"line":188},"19":{"name":"(anonymous_19)","decl":{"start":{"line":209,"column":4},"end":{"line":209,"column":5}},"loc":{"start":{"line":209,"column":76},"end":{"line":231,"column":5}},"line":209},"20":{"name":"(anonymous_20)","decl":{"start":{"line":232,"column":4},"end":{"line":232,"column":5}},"loc":{"start":{"line":232,"column":24},"end":{"line":268,"column":5}},"line":232},"21":{"name":"(anonymous_21)","decl":{"start":{"line":269,"column":4},"end":{"line":269,"column":5}},"loc":{"start":{"line":269,"column":29},"end":{"line":292,"column":5}},"line":269}},"branchMap":{"0":{"loc":{"start":{"line":35,"column":12},"end":{"line":50,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":50,"column":13}},{"start":{"line":35,"column":12},"end":{"line":50,"column":13}}],"line":35},"1":{"loc":{"start":{"line":37,"column":20},"end":{"line":48,"column":21}},"type":"if","locations":[{"start":{"line":37,"column":20},"end":{"line":48,"column":21}},{"start":{"line":37,"column":20},"end":{"line":48,"column":21}}],"line":37},"2":{"loc":{"start":{"line":39,"column":28},"end":{"line":46,"column":29}},"type":"if","locations":[{"start":{"line":39,"column":28},"end":{"line":46,"column":29}},{"start":{"line":39,"column":28},"end":{"line":46,"column":29}}],"line":39},"3":{"loc":{"start":{"line":39,"column":32},"end":{"line":39,"column":101}},"type":"binary-expr","locations":[{"start":{"line":39,"column":32},"end":{"line":39,"column":56}},{"start":{"line":39,"column":60},"end":{"line":39,"column":101}}],"line":39},"4":{"loc":{"start":{"line":41,"column":36},"end":{"line":44,"column":37}},"type":"if","locations":[{"start":{"line":41,"column":36},"end":{"line":44,"column":37}},{"start":{"line":41,"column":36},"end":{"line":44,"column":37}}],"line":41},"5":{"loc":{"start":{"line":41,"column":40},"end":{"line":42,"column":104}},"type":"binary-expr","locations":[{"start":{"line":41,"column":40},"end":{"line":41,"column":69}},{"start":{"line":42,"column":40},"end":{"line":42,"column":104}}],"line":41},"6":{"loc":{"start":{"line":55,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":63,"column":9}},{"start":{"line":55,"column":8},"end":{"line":63,"column":9}}],"line":55},"7":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":57}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":27}},{"start":{"line":55,"column":31},"end":{"line":55,"column":57}}],"line":55},"8":{"loc":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},{"start":{"line":58,"column":16},"end":{"line":60,"column":17}}],"line":58},"9":{"loc":{"start":{"line":67,"column":15},"end":{"line":67,"column":117}},"type":"binary-expr","locations":[{"start":{"line":67,"column":15},"end":{"line":67,"column":28}},{"start":{"line":67,"column":32},"end":{"line":67,"column":117}}],"line":67},"10":{"loc":{"start":{"line":67,"column":61},"end":{"line":67,"column":116}},"type":"binary-expr","locations":[{"start":{"line":67,"column":61},"end":{"line":67,"column":82}},{"start":{"line":67,"column":86},"end":{"line":67,"column":116}}],"line":67},"11":{"loc":{"start":{"line":72,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":78,"column":13}},{"start":{"line":72,"column":12},"end":{"line":78,"column":13}}],"line":72},"12":{"loc":{"start":{"line":74,"column":20},"end":{"line":76,"column":21}},"type":"if","locations":[{"start":{"line":74,"column":20},"end":{"line":76,"column":21}},{"start":{"line":74,"column":20},"end":{"line":76,"column":21}}],"line":74},"13":{"loc":{"start":{"line":85,"column":12},"end":{"line":100,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":100,"column":13}},{"start":{"line":85,"column":12},"end":{"line":100,"column":13}}],"line":85},"14":{"loc":{"start":{"line":87,"column":20},"end":{"line":97,"column":21}},"type":"if","locations":[{"start":{"line":87,"column":20},"end":{"line":97,"column":21}},{"start":{"line":87,"column":20},"end":{"line":97,"column":21}}],"line":87},"15":{"loc":{"start":{"line":89,"column":28},"end":{"line":95,"column":29}},"type":"if","locations":[{"start":{"line":89,"column":28},"end":{"line":95,"column":29}},{"start":{"line":89,"column":28},"end":{"line":95,"column":29}}],"line":89},"16":{"loc":{"start":{"line":91,"column":36},"end":{"line":93,"column":37}},"type":"if","locations":[{"start":{"line":91,"column":36},"end":{"line":93,"column":37}},{"start":{"line":91,"column":36},"end":{"line":93,"column":37}}],"line":91},"17":{"loc":{"start":{"line":111,"column":12},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":121,"column":13}},{"start":{"line":111,"column":12},"end":{"line":121,"column":13}}],"line":111},"18":{"loc":{"start":{"line":113,"column":20},"end":{"line":119,"column":21}},"type":"if","locations":[{"start":{"line":113,"column":20},"end":{"line":119,"column":21}},{"start":{"line":113,"column":20},"end":{"line":119,"column":21}}],"line":113},"19":{"loc":{"start":{"line":115,"column":28},"end":{"line":117,"column":29}},"type":"if","locations":[{"start":{"line":115,"column":28},"end":{"line":117,"column":29}},{"start":{"line":115,"column":28},"end":{"line":117,"column":29}}],"line":115},"20":{"loc":{"start":{"line":115,"column":32},"end":{"line":115,"column":101}},"type":"binary-expr","locations":[{"start":{"line":115,"column":32},"end":{"line":115,"column":56}},{"start":{"line":115,"column":60},"end":{"line":115,"column":101}}],"line":115},"21":{"loc":{"start":{"line":126,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":153,"column":9}},{"start":{"line":126,"column":8},"end":{"line":153,"column":9}}],"line":126},"22":{"loc":{"start":{"line":128,"column":16},"end":{"line":134,"column":17}},"type":"if","locations":[{"start":{"line":128,"column":16},"end":{"line":134,"column":17}},{"start":{"line":128,"column":16},"end":{"line":134,"column":17}}],"line":128},"23":{"loc":{"start":{"line":130,"column":24},"end":{"line":132,"column":25}},"type":"if","locations":[{"start":{"line":130,"column":24},"end":{"line":132,"column":25}},{"start":{"line":130,"column":24},"end":{"line":132,"column":25}}],"line":130},"24":{"loc":{"start":{"line":137,"column":13},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":13},"end":{"line":153,"column":9}},{"start":{"line":137,"column":13},"end":{"line":153,"column":9}}],"line":137},"25":{"loc":{"start":{"line":139,"column":16},"end":{"line":150,"column":17}},"type":"if","locations":[{"start":{"line":139,"column":16},"end":{"line":150,"column":17}},{"start":{"line":139,"column":16},"end":{"line":150,"column":17}}],"line":139},"26":{"loc":{"start":{"line":139,"column":20},"end":{"line":139,"column":84}},"type":"binary-expr","locations":[{"start":{"line":139,"column":20},"end":{"line":139,"column":48}},{"start":{"line":139,"column":52},"end":{"line":139,"column":84}}],"line":139},"27":{"loc":{"start":{"line":141,"column":20},"end":{"line":143,"column":21}},"type":"if","locations":[{"start":{"line":141,"column":20},"end":{"line":143,"column":21}},{"start":{"line":141,"column":20},"end":{"line":143,"column":21}}],"line":141},"28":{"loc":{"start":{"line":145,"column":21},"end":{"line":150,"column":17}},"type":"if","locations":[{"start":{"line":145,"column":21},"end":{"line":150,"column":17}},{"start":{"line":145,"column":21},"end":{"line":150,"column":17}}],"line":145},"29":{"loc":{"start":{"line":146,"column":20},"end":{"line":149,"column":21}},"type":"if","locations":[{"start":{"line":146,"column":20},"end":{"line":149,"column":21}},{"start":{"line":146,"column":20},"end":{"line":149,"column":21}}],"line":146},"30":{"loc":{"start":{"line":146,"column":24},"end":{"line":147,"column":94}},"type":"binary-expr","locations":[{"start":{"line":146,"column":24},"end":{"line":146,"column":63}},{"start":{"line":147,"column":24},"end":{"line":147,"column":94}}],"line":146},"31":{"loc":{"start":{"line":157,"column":12},"end":{"line":168,"column":13}},"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":168,"column":13}},{"start":{"line":157,"column":12},"end":{"line":168,"column":13}}],"line":157},"32":{"loc":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},{"start":{"line":158,"column":16},"end":{"line":161,"column":17}}],"line":158},"33":{"loc":{"start":{"line":158,"column":20},"end":{"line":159,"column":90}},"type":"binary-expr","locations":[{"start":{"line":158,"column":20},"end":{"line":158,"column":59}},{"start":{"line":159,"column":20},"end":{"line":159,"column":90}}],"line":158},"34":{"loc":{"start":{"line":163,"column":17},"end":{"line":168,"column":13}},"type":"if","locations":[{"start":{"line":163,"column":17},"end":{"line":168,"column":13}},{"start":{"line":163,"column":17},"end":{"line":168,"column":13}}],"line":163},"35":{"loc":{"start":{"line":163,"column":21},"end":{"line":163,"column":85}},"type":"binary-expr","locations":[{"start":{"line":163,"column":21},"end":{"line":163,"column":49}},{"start":{"line":163,"column":53},"end":{"line":163,"column":85}}],"line":163},"36":{"loc":{"start":{"line":165,"column":16},"end":{"line":167,"column":17}},"type":"if","locations":[{"start":{"line":165,"column":16},"end":{"line":167,"column":17}},{"start":{"line":165,"column":16},"end":{"line":167,"column":17}}],"line":165},"37":{"loc":{"start":{"line":174,"column":12},"end":{"line":184,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":184,"column":13}},{"start":{"line":174,"column":12},"end":{"line":184,"column":13}}],"line":174},"38":{"loc":{"start":{"line":176,"column":20},"end":{"line":182,"column":21}},"type":"if","locations":[{"start":{"line":176,"column":20},"end":{"line":182,"column":21}},{"start":{"line":176,"column":20},"end":{"line":182,"column":21}}],"line":176},"39":{"loc":{"start":{"line":178,"column":28},"end":{"line":180,"column":29}},"type":"if","locations":[{"start":{"line":178,"column":28},"end":{"line":180,"column":29}},{"start":{"line":178,"column":28},"end":{"line":180,"column":29}}],"line":178},"40":{"loc":{"start":{"line":178,"column":32},"end":{"line":178,"column":92}},"type":"binary-expr","locations":[{"start":{"line":178,"column":32},"end":{"line":178,"column":56}},{"start":{"line":178,"column":60},"end":{"line":178,"column":92}}],"line":178},"41":{"loc":{"start":{"line":191,"column":12},"end":{"line":205,"column":13}},"type":"if","locations":[{"start":{"line":191,"column":12},"end":{"line":205,"column":13}},{"start":{"line":191,"column":12},"end":{"line":205,"column":13}}],"line":191},"42":{"loc":{"start":{"line":193,"column":20},"end":{"line":203,"column":21}},"type":"if","locations":[{"start":{"line":193,"column":20},"end":{"line":203,"column":21}},{"start":{"line":193,"column":20},"end":{"line":203,"column":21}}],"line":193},"43":{"loc":{"start":{"line":195,"column":28},"end":{"line":201,"column":29}},"type":"if","locations":[{"start":{"line":195,"column":28},"end":{"line":201,"column":29}},{"start":{"line":195,"column":28},"end":{"line":201,"column":29}}],"line":195},"44":{"loc":{"start":{"line":195,"column":32},"end":{"line":196,"column":88}},"type":"binary-expr","locations":[{"start":{"line":195,"column":32},"end":{"line":195,"column":56}},{"start":{"line":196,"column":32},"end":{"line":196,"column":88}}],"line":195},"45":{"loc":{"start":{"line":198,"column":32},"end":{"line":200,"column":33}},"type":"if","locations":[{"start":{"line":198,"column":32},"end":{"line":200,"column":33}},{"start":{"line":198,"column":32},"end":{"line":200,"column":33}}],"line":198},"46":{"loc":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},{"start":{"line":212,"column":8},"end":{"line":214,"column":9}}],"line":212},"47":{"loc":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},{"start":{"line":218,"column":8},"end":{"line":220,"column":9}}],"line":218},"48":{"loc":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},{"start":{"line":222,"column":8},"end":{"line":224,"column":9}}],"line":222},"49":{"loc":{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":229,"column":9}},{"start":{"line":227,"column":8},"end":{"line":229,"column":9}}],"line":227},"50":{"loc":{"start":{"line":233,"column":8},"end":{"line":267,"column":9}},"type":"if","locations":[{"start":{"line":233,"column":8},"end":{"line":267,"column":9}},{"start":{"line":233,"column":8},"end":{"line":267,"column":9}}],"line":233},"51":{"loc":{"start":{"line":235,"column":16},"end":{"line":241,"column":17}},"type":"if","locations":[{"start":{"line":235,"column":16},"end":{"line":241,"column":17}},{"start":{"line":235,"column":16},"end":{"line":241,"column":17}}],"line":235},"52":{"loc":{"start":{"line":237,"column":24},"end":{"line":239,"column":25}},"type":"if","locations":[{"start":{"line":237,"column":24},"end":{"line":239,"column":25}},{"start":{"line":237,"column":24},"end":{"line":239,"column":25}}],"line":237},"53":{"loc":{"start":{"line":244,"column":13},"end":{"line":267,"column":9}},"type":"if","locations":[{"start":{"line":244,"column":13},"end":{"line":267,"column":9}},{"start":{"line":244,"column":13},"end":{"line":267,"column":9}}],"line":244},"54":{"loc":{"start":{"line":246,"column":16},"end":{"line":264,"column":17}},"type":"if","locations":[{"start":{"line":246,"column":16},"end":{"line":264,"column":17}},{"start":{"line":246,"column":16},"end":{"line":264,"column":17}}],"line":246},"55":{"loc":{"start":{"line":246,"column":20},"end":{"line":246,"column":84}},"type":"binary-expr","locations":[{"start":{"line":246,"column":20},"end":{"line":246,"column":48}},{"start":{"line":246,"column":52},"end":{"line":246,"column":84}}],"line":246},"56":{"loc":{"start":{"line":248,"column":20},"end":{"line":250,"column":21}},"type":"if","locations":[{"start":{"line":248,"column":20},"end":{"line":250,"column":21}},{"start":{"line":248,"column":20},"end":{"line":250,"column":21}}],"line":248},"57":{"loc":{"start":{"line":252,"column":21},"end":{"line":264,"column":17}},"type":"if","locations":[{"start":{"line":252,"column":21},"end":{"line":264,"column":17}},{"start":{"line":252,"column":21},"end":{"line":264,"column":17}}],"line":252},"58":{"loc":{"start":{"line":253,"column":20},"end":{"line":263,"column":21}},"type":"if","locations":[{"start":{"line":253,"column":20},"end":{"line":263,"column":21}},{"start":{"line":253,"column":20},"end":{"line":263,"column":21}}],"line":253},"59":{"loc":{"start":{"line":253,"column":24},"end":{"line":261,"column":26}},"type":"binary-expr","locations":[{"start":{"line":253,"column":24},"end":{"line":253,"column":63}},{"start":{"line":254,"column":24},"end":{"line":254,"column":90}},{"start":{"line":255,"column":24},"end":{"line":261,"column":26}}],"line":253},"60":{"loc":{"start":{"line":271,"column":12},"end":{"line":289,"column":13}},"type":"if","locations":[{"start":{"line":271,"column":12},"end":{"line":289,"column":13}},{"start":{"line":271,"column":12},"end":{"line":289,"column":13}}],"line":271},"61":{"loc":{"start":{"line":272,"column":16},"end":{"line":282,"column":17}},"type":"if","locations":[{"start":{"line":272,"column":16},"end":{"line":282,"column":17}},{"start":{"line":272,"column":16},"end":{"line":282,"column":17}}],"line":272},"62":{"loc":{"start":{"line":272,"column":20},"end":{"line":280,"column":22}},"type":"binary-expr","locations":[{"start":{"line":272,"column":20},"end":{"line":272,"column":59}},{"start":{"line":273,"column":20},"end":{"line":273,"column":86}},{"start":{"line":274,"column":20},"end":{"line":280,"column":22}}],"line":272},"63":{"loc":{"start":{"line":284,"column":17},"end":{"line":289,"column":13}},"type":"if","locations":[{"start":{"line":284,"column":17},"end":{"line":289,"column":13}},{"start":{"line":284,"column":17},"end":{"line":289,"column":13}}],"line":284},"64":{"loc":{"start":{"line":284,"column":21},"end":{"line":284,"column":85}},"type":"binary-expr","locations":[{"start":{"line":284,"column":21},"end":{"line":284,"column":49}},{"start":{"line":284,"column":53},"end":{"line":284,"column":85}}],"line":284},"65":{"loc":{"start":{"line":286,"column":16},"end":{"line":288,"column":17}},"type":"if","locations":[{"start":{"line":286,"column":16},"end":{"line":288,"column":17}},{"start":{"line":286,"column":16},"end":{"line":288,"column":17}}],"line":286}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":88,"6":88,"7":88,"8":88,"9":88,"10":88,"11":88,"12":88,"13":88,"14":88,"15":88,"16":88,"17":0,"18":88,"19":0,"20":44,"21":176,"22":44,"23":3388,"24":1694,"25":18326,"26":44,"27":352,"28":44,"29":0,"30":21247,"31":21247,"32":21247,"33":41223,"34":31235,"35":21247,"36":0,"37":71465,"38":71465,"39":44,"40":44,"41":484,"42":220,"43":660,"44":132,"45":44,"46":132,"47":88,"48":88,"49":352,"50":88,"51":1544,"52":728,"53":8008,"54":3640,"55":18200,"56":3640,"57":88,"58":88,"59":440,"60":44,"61":44,"62":176,"63":44,"64":3388,"65":1694,"66":18326,"67":44,"68":0,"69":4,"70":2,"71":14,"72":2,"73":8,"74":2,"75":2,"76":2,"77":64,"78":8,"79":8,"80":2,"81":56,"82":0,"83":0,"84":0,"85":46,"86":156,"87":2,"88":2,"89":154,"90":38,"91":38,"92":10,"93":34,"94":90,"95":360,"96":90,"97":180,"98":90,"99":712,"100":90,"101":0,"102":1,"103":1,"104":5,"105":1,"106":149,"107":74,"108":814,"109":74,"110":74,"111":74,"112":1,"113":74,"114":74,"115":0,"116":74,"117":74,"118":74,"119":74,"120":30,"121":44,"122":44,"123":0,"124":44,"125":44,"126":44,"127":0,"128":44,"129":296,"130":148,"131":1036,"132":148,"133":592,"134":148,"135":148,"136":148,"137":7916,"138":652,"139":652,"140":88,"141":7264,"142":0,"143":0,"144":60,"145":6110,"146":18800,"147":88,"148":88,"149":18712,"150":5458,"151":5458,"152":616,"153":5406,"154":1},"f":{"0":88,"1":88,"2":88,"3":88,"4":88,"5":0,"6":44,"7":21247,"8":71465,"9":71465,"10":44,"11":132,"12":88,"13":440,"14":44,"15":4,"16":46,"17":90,"18":1,"19":74,"20":296,"21":6110},"b":{"0":[44,132],"1":[1694,1694],"2":[44,18282],"3":[18326,8338],"4":[44,308],"5":[352,176],"6":[21247,0],"7":[21247,21247],"8":[31235,9988],"9":[71465,71465],"10":[71465,71465],"11":[220,264],"12":[132,528],"13":[88,264],"14":[728,816],"15":[3640,4368],"16":[3640,14560],"17":[44,132],"18":[1694,1694],"19":[44,18282],"20":[18326,8338],"21":[2,2],"22":[2,12],"23":[2,6],"24":[2,0],"25":[8,56],"26":[64,56],"27":[2,6],"28":[0,56],"29":[0,0],"30":[0,0],"31":[2,154],"32":[2,0],"33":[2,2],"34":[38,116],"35":[154,118],"36":[10,28],"37":[90,270],"38":[90,90],"39":[90,622],"40":[712,356],"41":[1,4],"42":[74,75],"43":[74,740],"44":[814,370],"45":[74,0],"46":[0,74],"47":[30,44],"48":[0,44],"49":[0,44],"50":[148,148],"51":[148,888],"52":[148,444],"53":[148,0],"54":[652,7264],"55":[7916,7264],"56":[88,564],"57":[0,7264],"58":[0,0],"59":[0,0,0],"60":[88,18712],"61":[88,0],"62":[88,88,88],"63":[5458,13254],"64":[18712,13404],"65":[616,4842]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/indexhtml.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/indexhtml.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\nimport {parse} from \"parse5\";\nimport JSZip from \"jszip\";\nconst http = require(\"http\");\nimport {GeoResponse} from \"./response\";\nexport class GeolocationFetcher {\n\tpublic async fetchGeolocation(address: string): Promise<GeoResponse> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet addressEncoded = encodeURIComponent(address);\n\t\t\tlet apiURL = `http://cs310.students.cs.ubc.ca:11316/api/v1/project_team067/${addressEncoded}`;\n\n\t\t\thttp.get(apiURL, (res: any) => {\n\t\t\t\tres.setEncoding(\"utf8\");\n\t\t\t\tlet rawData = \"\";\n\n\t\t\t\t// Concatenate received data chunks\n\t\t\t\tres.on(\"data\", (chunk: any) => {\n\t\t\t\t\trawData += chunk;\n\t\t\t\t});\n\n\t\t\t\t// Once the response ends\n\t\t\t\tres.on(\"end\", () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst parsedData = JSON.parse(rawData);\n\t\t\t\t\t\t// if (parsedData.lat !== undefined && parsedData.lon !== undefined) {\n\t\t\t\t\t\t// \t// Resolve with latitude and longitude\n\t\t\t\t\t\t// \tresolve({latitude: parsedData.lat, longitude: parsedData.lon});\n\t\t\t\t\t\t// } else if (parsedData.error) {\n\t\t\t\t\t\t// \t// Reject with error message if an error occurred\n\t\t\t\t\t\t// \treject(new InsightError(parsedData.error));\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \t// Reject with invalid response format error\n\t\t\t\t\t\t// \treject(new InsightError(\"Invalid response format\"));\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tresolve(parsedData);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Reject with JSON parsing error\n\t\t\t\t\t\treject(new InsightError(\"wrong\"));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Handle HTTP request errors\n\t\t\t\tres.on(\"error\", (error: any) => {\n\t\t\t\t\treject(new InsightError(\"wrong\"));\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic fetchAddress(buildingName: string, tableNode: any): string {\n\t\tfor (const childNode of tableNode.childNodes) {\n\t\t\t// Check if the child node is a <tbody> element\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\t// Iterate through each child node of the table body\n\t\t\t\tfor (const tbodyChildNode of childNode.childNodes) {\n\t\t\t\t\t// Check if the child node is a <tr> element\n\t\t\t\t\tif (tbodyChildNode.nodeName === \"tr\") {\n\t\t\t\t\t\t// Check if the building name matches\n\t\t\t\t\t\tfor (const tdNode of tbodyChildNode.childNodes) {\n\t\t\t\t\t\t\tif (tdNode.nodeName === \"td\" && this.getNodeText(tdNode) === buildingName) {\n\t\t\t\t\t\t\t\t// Iterate through <td> elements again to find the address\n\t\t\t\t\t\t\t\tfor (const addressNode of tbodyChildNode.childNodes) {\n\t\t\t\t\t\t\t\t\tif (addressNode.nodeName === \"td\" &&\n\t\t\t\t\t\t\t\t\t\tthis.hasClass(addressNode, \"views-field-field-building-address\")) {\n\t\t\t\t\t\t\t\t\t\treturn this.getNodeText(addressNode);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\"; // If building name not found or address column not found\n\t}\n\n\tpublic getNodeText(node: any): string {\n\t\tif (node.childNodes && node.childNodes.length > 0) {\n\t\t\tlet text = \"\";\n\t\t\tfor (const childNode of node.childNodes) {\n\t\t\t\tif (childNode.nodeName === \"#text\") {\n\t\t\t\t\ttext += childNode.value.trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tpublic hasClass(element: any, className: string): boolean {\n\t\treturn element.attrs && element.attrs.some((attr: any) =>\n\t\t\tattr.name === \"class\" && attr.value.includes(className));\n\t}\n\n\tpublic containsAllClassesInRow2(trNode: any, classNames: string[]): boolean {\n\t\t// Initialize a set to track which classes have been found\n\t\tconst foundClasses = new Set<string>();\n\n\t\t// Iterate through each child node of the table row (presumably <td> elements)\n\t\tfor (const childNode of trNode.childNodes) {\n\t\t\t// Check if the child node is a <td> element\n\t\t\tif (childNode.nodeName === \"td\") {\n\t\t\t\t// Iterate through each class name in the specified list\n\t\t\t\tfor (const className of classNames) {\n\t\t\t\t\t// Check if the <td> element has the current class\n\t\t\t\t\tif (this.hasClass(childNode, className)) {\n\t\t\t\t\t\t// Add the class to the set of found classes\n\t\t\t\t\t\tfoundClasses.add(className);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check if all specified classes have been found at least once\n\t\treturn classNames.every((className) => foundClasses.has(className));\n\t}\n\n\tpublic containsAllClassesInRow(tableNode: any, classNames: string[]): boolean {\n\t\t// Initialize a set to track which classes have been found\n\t\tconst foundClasses = new Set<string>();\n\n\t\t// Iterate through each child node of the table node\n\t\tfor (const childNode of tableNode.childNodes) {\n\t\t\t// Check if the child node is a <tbody> element\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\t// Iterate through each child node of the table body\n\t\t\t\tfor (const trNode of childNode.childNodes) {\n\t\t\t\t\t// Check if the child node is a <tr> element\n\t\t\t\t\tif (trNode.nodeName === \"tr\") {\n\t\t\t\t\t\t// Iterate through each child node of the table row\n\t\t\t\t\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\t\t\t\t\t// Check if the child node is a <td> element\n\t\t\t\t\t\t\tif (tdNode.nodeName === \"td\") {\n\t\t\t\t\t\t\t\t// Iterate through each class name in the specified list\n\t\t\t\t\t\t\t\tfor (const className of classNames) {\n\t\t\t\t\t\t\t\t\t// Check if the <td> element has the current class\n\t\t\t\t\t\t\t\t\tif (this.hasClass(tdNode, className)) {\n\t\t\t\t\t\t\t\t\t\t// Add the class to the set of found classes\n\t\t\t\t\t\t\t\t\t\tfoundClasses.add(className);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak; // Found tbody, exit loop\n\t\t\t}\n\t\t}\n\n\t\t// Check if all specified classes have been found at least once\n\t\treturn classNames.every((className) => foundClasses.has(className));\n\t}\n\n\tpublic containsBuildingInfoRow(tableNode: any, buildingName: string): boolean {\n\t\t// Required classes for the building information row\n\t\tconst requiredClasses = [\n\t\t\t\"views-field-field-building-code\",\n\t\t\t\"views-field-title\",\n\t\t\t\"views-field-field-building-address\"\n\t\t];\n\n\t\t// Iterate through each child node of the table node\n\t\tfor (const childNode of tableNode.childNodes) {\n\t\t\t// Check if the child node is a <tbody> element\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\t// Iterate through each child node of the table body\n\t\t\t\tfor (const tbodyChildNode of childNode.childNodes) {\n\t\t\t\t\t// Check if the child node is a <tr> element\n\t\t\t\t\tif (tbodyChildNode.nodeName === \"tr\") {\n\t\t\t\t\t\t// Iterate through each child node of the table row\n\t\t\t\t\t\tfor (const tdNode of tbodyChildNode.childNodes) {\n\t\t\t\t\t\t\t// Check if the child node is a <td> element and contains the building name\n\t\t\t\t\t\t\tif (tdNode.nodeName === \"td\" &&  this.getNodeText(tdNode) === buildingName) {\n\t\t\t\t\t\t\t\t// Check if the row contains all required classes\n\t\t\t\t\t\t\t\treturn this.containsAllClassesInRow2(tbodyChildNode, requiredClasses);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false; // No row with the building name and required classes found\n\t}\n\n\tpublic findBuildingTable(node: any): any {\n\t\tif (node.nodeName === \"#document\") {\n\t\t\tfor (const childNode of node.childNodes) {\n\t\t\t\tif (childNode.nodeName === \"html\") {\n\t\t\t\t\tfor (const htmlChildNode of childNode.childNodes) {\n\t\t\t\t\t\tif (htmlChildNode.nodeName === \"body\") {\n\t\t\t\t\t\t\treturn this.findBuildingTable(htmlChildNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (node.nodeName === \"body\") {\n\t\t\t// console.log(node);\n\t\t\tfor (const childNode of node.childNodes) {\n\t\t\t\tif (childNode.nodeName === \"div\" || childNode.nodeName === \"section\") {\n\t\t\t\t\tconst tableNode = this.findTableInDiv(childNode);\n\t\t\t\t\tif (tableNode) {\n\t\t\t\t\t\treturn tableNode;\n\t\t\t\t\t}\n\t\t\t\t} else if (childNode.nodeName === \"table\") {\n\t\t\t\t\tif (this.hasClass(childNode, \"views-table\") &&\n\t\t\t\t\t\tthis.containsTDWithClass(childNode, \"views-field-field-building-code\")) {\n\t\t\t\t\t\treturn childNode; // Return the table node\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic findTableInDiv(divNode: any): any {\n\t\tfor (const childNode of divNode.childNodes) {\n\t\t\tif (childNode.nodeName === \"table\") {\n\t\t\t\tif (this.hasClass(childNode, \"views-table\") &&\n\t\t\t\t\tthis.containsTDWithClass(childNode, \"views-field-field-building-code\")) {\n\t\t\t\t\treturn childNode; // Return the table node\n\t\t\t\t}\n\t\t\t} else if (childNode.nodeName === \"div\" || childNode.nodeName === \"section\") {\n\t\t\t\t// Recursively search nested divs and sections\n\t\t\t\tconst tableNode = this.findTableInDiv(childNode);\n\t\t\t\tif (tableNode) {\n\t\t\t\t\treturn tableNode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null; // Return null if no table is found in this div or its children\n\t}\n\n\tpublic containsTDWithClass(tableNode: any, className: string): boolean {\n\t\tfor (const childNode of tableNode.childNodes) {\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\tfor (const trNode of childNode.childNodes) {\n\t\t\t\t\tif (trNode.nodeName === \"tr\") {\n\t\t\t\t\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\t\t\t\t\tif (tdNode.nodeName === \"td\" && this.hasClass(tdNode, className)) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\n\tpublic extractBuildingNames(buildingTable: any): string[] {\n\t\tconst buildingNames: string[] = [];\n\t\tfor (const childNode of buildingTable.childNodes) {\n\t\t\tif (childNode.nodeName === \"tbody\") {\n\t\t\t\tfor (const trNode of childNode.childNodes) {\n\t\t\t\t\tif (trNode.nodeName === \"tr\") {\n\t\t\t\t\t\tfor (const tdNode of trNode.childNodes) {\n\t\t\t\t\t\t\tif (tdNode.nodeName === \"td\" &&\n\t\t\t\t\t\t\t\tthis.hasClass(tdNode, \"views-field-field-building-code\")) {\n\t\t\t\t\t\t\t\tconst buildingName = this.getNodeText(tdNode);\n\t\t\t\t\t\t\t\tif (buildingName) {\n\t\t\t\t\t\t\t\t\tbuildingNames.push(buildingName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn buildingNames;\n\t}\n\n\tpublic async validateBuildingFile\n\t(decodedContent: JSZip, buildingName: string, buildingTable: any): Promise<boolean> {\n\t\tconst buildingFile = decodedContent.\n\t\t\tfile(`campus/discover/buildings-and-classrooms/${buildingName}.htm`);\n\t\tif (!buildingFile) {\n\t\t\tthrow new InsightError(`Building file not found: ${buildingName}.htm`);\n\t\t}\n\n\t\tconst buildingFileContent = await buildingFile.async(\"text\");\n\t\tconst buildingDocument = parse(buildingFileContent);\n\t\tconst roomTable = this.findRoomTable(buildingDocument);\n\t\tif (!roomTable) {\n\t\t\treturn Promise.reject(new InsightError(`No valid room table found in building file: ${buildingName}.htm`));\n\t\t}\n\t\tconst buildingInfoRowExists = this.containsBuildingInfoRow(buildingTable, buildingName);\n\t\tif (!buildingInfoRowExists){\n\t\t\treturn Promise.reject(new InsightError(`No valid room table found in building file: ${buildingName}.htm`));\n\t\t}\n\t\tlet buildingAddress = this.fetchAddress(buildingName,buildingTable);\n\t\tlet geolocation = await this.fetchGeolocation(buildingAddress);\n\t\tif (geolocation.error !== undefined){\n\t\t\treturn Promise.reject(new InsightError(\"No valid room table found in building file:\"));\n\t\t}\n\t\treturn Promise.resolve(true);\n\t}\n\n\tpublic findRoomTable(node: any): any {\n\t\tif (node.nodeName === \"#document\") {\n\t\t\tfor (const childNode of node.childNodes) {\n\t\t\t\tif (childNode.nodeName === \"html\") {\n\t\t\t\t\tfor (const htmlChildNode of childNode.childNodes) {\n\t\t\t\t\t\tif (htmlChildNode.nodeName === \"body\") {\n\t\t\t\t\t\t\treturn this.findRoomTable(htmlChildNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (node.nodeName === \"body\") {\n\t\t\tfor (const childNode of node.childNodes) {\n\t\t\t\tif (childNode.nodeName === \"div\" || childNode.nodeName === \"section\") {\n\t\t\t\t\tconst tableNode = this.findTableInDiv2(childNode);\n\t\t\t\t\tif (tableNode) {\n\t\t\t\t\t\treturn tableNode;\n\t\t\t\t\t}\n\t\t\t\t} else if (childNode.nodeName === \"table\") {\n\t\t\t\t\tif (this.hasClass(childNode, \"views-table\") &&\n\t\t\t\t\t\tthis.containsTDWithClass(childNode, \"views-field-field-room-type\") &&\n\t\t\t\t\t\tthis.containsAllClassesInRow(childNode,[\n\t\t\t\t\t\t\t\"views-field-field-room-number\",\n\t\t\t\t\t\t\t\"views-field-field-room-capacity\",\n\t\t\t\t\t\t\t\"views-field-field-room-furniture\",\n\t\t\t\t\t\t\t\"views-field-field-room-type\",\n\t\t\t\t\t\t\t\"views-field-nothing\"\n\t\t\t\t\t\t]) ) {\n\t\t\t\t\t\treturn childNode; // Return the table node\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic findTableInDiv2(divNode: any): any {\n\t\tfor (const childNode of divNode.childNodes) {\n\t\t\tif (childNode.nodeName === \"table\") {\n\t\t\t\tif (this.hasClass(childNode, \"views-table\") &&\n\t\t\t\t\tthis.containsTDWithClass(childNode, \"views-field-field-room-type\") &&\n\t\t\t\t\tthis.containsAllClassesInRow(childNode,[\n\t\t\t\t\t\t\"views-field-field-room-number\",\n\t\t\t\t\t\t\"views-field-field-room-capacity\",\n\t\t\t\t\t\t\"views-field-field-room-furniture\",\n\t\t\t\t\t\t\"views-field-field-room-type\",\n\t\t\t\t\t\t\"views-field-nothing\"\n\t\t\t\t\t]) ) {\n\t\t\t\t\treturn childNode; // Return the table node\n\t\t\t\t}\n\t\t\t} else if (childNode.nodeName === \"div\" || childNode.nodeName === \"section\") {\n\t\t\t\t// Recursively search nested divs and sections\n\t\t\t\tconst tableNode = this.findTableInDiv2(childNode);\n\t\t\t\tif (tableNode) {\n\t\t\t\t\treturn tableNode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null; // Return null if no table is found in this div or its children\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"45e36813b17d8d001fcb227ec660851ea9833d2d","contentHash":"367d0e4bd5cf306043457d14730e6dd7d586e9ffdd69a99af431cf59095c75d1"},"/Users/rishishukla/Desktop/project_team067/src/controller/validation.ts":{"path":"/Users/rishishukla/Desktop/project_team067/src/controller/validation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":66}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":42}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":65}},"6":{"start":{"line":16,"column":29},"end":{"line":16,"column":60}},"7":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":97}},"9":{"start":{"line":20,"column":31},"end":{"line":20,"column":62}},"10":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":22,"column":99}},"12":{"start":{"line":24,"column":32},"end":{"line":24,"column":81}},"13":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":115}},"15":{"start":{"line":28,"column":37},"end":{"line":28,"column":63}},"16":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":114}},"18":{"start":{"line":34,"column":0},"end":{"line":34,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":24},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":30},"end":{"line":11,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":20},"end":{"line":14,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":47},"end":{"line":32,"column":5}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":41}},"type":"binary-expr","locations":[{"start":{"line":10,"column":15},"end":{"line":10,"column":23}},{"start":{"line":10,"column":27},"end":{"line":10,"column":41}}],"line":10},"1":{"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":64}},"type":"binary-expr","locations":[{"start":{"line":13,"column":15},"end":{"line":13,"column":18}},{"start":{"line":13,"column":22},"end":{"line":13,"column":38}},{"start":{"line":13,"column":42},"end":{"line":13,"column":64}}],"line":13},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"3":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"5":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":4,"6":2,"7":2,"8":0,"9":2,"10":2,"11":0,"12":2,"13":2,"14":0,"15":2,"16":2,"17":1,"18":1},"f":{"0":2,"1":2,"2":4,"3":2},"b":{"0":[2,2],"1":[4,3,3],"2":[0,2],"3":[0,2],"4":[0,2],"5":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rishishukla/Desktop/project_team067/src/controller/validation.ts","sources":["/Users/rishishukla/Desktop/project_team067/src/controller/validation.ts"],"names":[],"mappings":";;;AAAA,qDAAkE;AAGlE,MAAa,eAAe;IACpB,aAAa,CAAC,IAAwB;QAC5C,OAAO,IAAI,KAAK,mCAAkB,CAAC,KAAK,CAAC;IAC1C,CAAC;IAEM,gBAAgB,CAAC,OAAe;QACtC,OAAO,CAAC,OAAO,IAAI,OAAO,KAAK,EAAE,CAAC;IACnC,CAAC;IAEM,WAAW,CAAC,EAAU;QAC5B,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,oBAAoB,CAAC,cAAqB;QACtD,MAAM,YAAY,GAAG,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,EAAE;YAClB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACpE;QAED,MAAM,cAAc,GAAG,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,EAAE;YACpB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,4BAA4B,CAAC,CAAC,CAAC;SACtE;QAED,MAAM,eAAe,GAAG,cAAc,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;QAC1E,IAAI,CAAC,eAAe,EAAE;YACrB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,4CAA4C,CAAC,CAAC,CAAC;SACtF;QAED,MAAM,oBAAoB,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;YACjC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,6BAAY,CAAC,2CAA2C,CAAC,CAAC,CAAC;SACrF;IACF,CAAC;CACD;AAlCD,0CAkCC","sourcesContent":["import {InsightError, InsightDatasetKind} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\n\nexport class ValidationUtils {\n\tpublic isInValidKind(kind: InsightDatasetKind): boolean {\n\t\treturn kind !== InsightDatasetKind.Rooms;\n\t}\n\n\tpublic isInValidContent(content: string): boolean {\n\t\treturn !content || content === \"\";\n\t}\n\n\tpublic isInvalidID(id: string): boolean {\n\t\treturn !id || id.includes(\"_\") || id.trim().length === 0;\n\t}\n\n\tpublic async validateCampusFolder(decodedContent: JSZip): Promise<void> {\n\t\tconst campusFolder = decodedContent.folder(\"campus\");\n\t\tif (!campusFolder) {\n\t\t\treturn Promise.reject(new InsightError(\"campus folder not found.\"));\n\t\t}\n\n\t\tconst discoverFolder = campusFolder.folder(\"discover\");\n\t\tif (!discoverFolder) {\n\t\t\treturn Promise.reject(new InsightError(\"discover folder not found.\"));\n\t\t}\n\n\t\tconst buildingsFolder = discoverFolder.folder(\"buildings-and-classrooms\");\n\t\tif (!buildingsFolder) {\n\t\t\treturn Promise.reject(new InsightError(\"buildings-and-classrooms folder not found.\"));\n\t\t}\n\n\t\tconst buildingsFolderFiles = buildingsFolder.file(/.+/);\n\t\tif (!buildingsFolderFiles.length) {\n\t\t\treturn Promise.reject(new InsightError(\"buildings-and-classrooms folder is empty.\"));\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4f57b0cc79294099367ddc22c8db3e65b1c348c7","contentHash":"1e0a444e6f53b89198c3c1b124b4331e3c8e0ca8fc7b4f642c4cbb28b4b00d44"}}